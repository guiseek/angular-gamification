var COMPODOC_SEARCH_INDEX = {
    "index": {"version":"1.0.0","fields":[{"name":"title","boost":10},{"name":"body","boost":1}],"ref":"url","tokenizer":"default","documentStore":{"store":{"index.html":["0","1","10","100","199","2","200","299","3","30","300","399","4","400","499","50","500","599","600","699","700","799","800","899","900","99","999","achiev","add(nam","angular","angular/cor","app","app.component.css","app.component.html","app.component.t","app.module.t","appcompon","applic","assets/badges/beginner.svg","assets/badges/constant.svg","assets/badges/king.svg","assets/badges/lord.svg","assets/badges/nice.svg","assets/badges/ninja.svg","assets/badges/partner.svg","assets/badges/power.svg","assets/badges/usual.svg","assets/badges/vip.svg","badg","base","beginn","callback","chang","changelog","class","command","compon","config","configur","console.info('compon","console.log('add","console.log('breakpoint","console.log('compon","console.log('delet","console.log('gamif","console.log('sav","const","constant","constructor","constructor(publ","content","coverag","delete(hero","demo","document","es5","es6","exampl","export","file","folder","follow","gamif","gamificationmodul","gamificationmodule.forroot(config","gamificationservic","get","gethero","gui","h","hero","hero.servic","heroes.component.css","heroes.component.html","heroes.component.t","heroescompon","heroservic","icon","implement","import","improv","index","initgamef","instal","integr","interact","istanbul","king","level","librari","licens","live","lord","match","max","min","mission","mit","modul","name","name.trim","ngmodul","ngoninit","nice","ninja","npm","oninit","partner","point","power","privat","progress","project","public","rang","report","result","return","root","run","saveload","selector","simpl","spec.bundle.j","start","starter","string","styleurl","subscribe(hero","templateurl","test","testit","this.gamif","this.gamification.achievemission('add","this.gamification.achievemission('delet","this.gamification.addbreakpoint(100","this.gamification.addbreakpoint(200","this.gamification.addbreakpoint(300","this.gamification.addcomponent(400","this.gamification.addmission('add","this.gamification.addmission('delet","this.gamification.addmission('sav","this.gamification.getlevel","this.gamification.getlevelbypoints(point","this.gamification.getpoint","this.gethero","this.hero","this.heroes.filter(h","this.heroes.push(hero","this.heroservice.addhero","this.heroservice.deletehero(hero).subscrib","this.heroservice.gethero","this.initgamef","this.progress","this.progress.max","this.progress.valu","this.us","this.user.level","this.user.point","titl","tour","typescript","unit","updat","us","user","usual","v5","valu","vip","void","written"],"overview.html":["1","4","bootstrap","declar","depend","export","inject","interfac","legend","match","modul","out","overview","provid","reset","result","zoom"],"changelog.html":["14","16","2018","accept","angular","changelog","config","creat","fev","gamif","get","librari","match","modul","result","start"],"license.html":["2018","abov","action","and/or","aris","associ","author","c","charg","claim","condit","connect","contract","copi","copyright","damag","deal","distribut","document","event","express","file","fit","follow","free","furnish","get","grant","gui","herebi","holder","impli","includ","kind","liabil","liabl","licens","limit","match","merchant","merg","mit","modifi","noninfring","notic","obtain","otherwis","out","particular","permiss","permit","person","portion","provid","publish","purpos","restrict","result","right","seek","sell","shall","softwar","start","subject","sublicens","substanti","tort","us","warranti","whether","without"],"modules.html":["avail","brows","gamificationmodul","graph","match","modul","result"],"modules/GamificationModule.html":["angular/cor","appmodul","child","class","compon","config","consid","declar","differ","direct","export","featur","file","forchild","forchild(config","forroot","forroot(config","gamificationmodul","gamificationmodule.forroot(config","gamificationservic","import","info","instanc","lazi","load","match","method","modul","modulewithprovid","new","ngmodul","pipe","provid","public","regist","requir","result","return","same","services/gamification.servic","share","sourc","src/modules/gamification.module.t","static","us","useclass","usevalu"],"injectables/BreakpointService.html":["action","actionfunc","angular/cor","breakpointservic","class","constructor","constructor(pointsthreshold","defin","descript","export","file","function","import","index","info","inject","match","method","name","number","option","paramet","pointsthreshold","properti","public","result","return","sourc","src/services/breakpoint.service.t","src/services/breakpoint.service.ts:12","src/services/breakpoint.service.ts:5","src/services/breakpoint.service.ts:6","this.actionfunc","this.pointsthreshold","true","type","void"],"injectables/GamificationService.html":["0","achievefn","achievemiss","achievemission(nam","actionfn","addbreakpoint","addbreakpoint(point","addcompon","addcomponent(point","addlevel","addlevel(level","addmiss","addmission(nam","addpoint","addpoints(point","angular/cor","array","bar.servic","breakpoint","breakpoint.servic","breakpointservic","breakpointservice(point","class","compon","component.start","config","config.level","config.point","console.log('config","const","constructor","constructor(@inject('config","constructor(config","default","defin","descript","export","file","function","gamificationservic","getbreakpoint","getcompon","getlevel","getlevelbypoint","getlevelbypoints(point","getmiss","getpoint","import","index","info","inject","interface/level.interfac","level","level.rang","level.range.min","match","method","mission","mission.achiev","mission.nam","mission.servic","mission.start","missionservic","missionservice(nam","name","new","number","option","paramet","point","privat","progress","progressbarservic","progressbarservice(point","properti","public","result","return","setlevel","setlevel(level","setlevels(level","setpoint","setpoints(point","sourc","src/services/gamification.service.t","src/services/gamification.service.ts:10","src/services/gamification.service.ts:11","src/services/gamification.service.ts:12","src/services/gamification.service.ts:13","src/services/gamification.service.ts:14","src/services/gamification.service.ts:23","src/services/gamification.service.ts:29","src/services/gamification.service.ts:32","src/services/gamification.service.ts:38","src/services/gamification.service.ts:41","src/services/gamification.service.ts:45","src/services/gamification.service.ts:48","src/services/gamification.service.ts:59","src/services/gamification.service.ts:62","src/services/gamification.service.ts:65","src/services/gamification.service.ts:68","src/services/gamification.service.ts:71","src/services/gamification.service.ts:74","src/services/gamification.service.ts:77","src/services/gamification.service.ts:80","src/services/gamification.service.ts:87","src/services/gamification.service.ts:9","startfn","string","this.addpoints(mission.point","this.breakpoint","this.breakpoints.foreach((breakpoint","this.breakpoints.push(breakpoint","this.compon","this.components.push(compon","this.components[index].update(point","this.getlevels().filter(level","this.level","this.levels.push(level","this.levels[0","this.miss","this.missions.map((miss","this.missions.push(miss","this.point","this.setlevel)[0","true","type","updatefn","valu","void"],"injectables/MissionService.html":["0","achiev","achievefn","angular/cor","class","constructor","constructor(nam","default","defin","descript","export","file","function","import","index","info","inject","match","method","mission","missionservic","name","number","option","paramet","point","privat","properti","public","result","return","setpoint","setpoints(point","sourc","src/services/mission.service.t","src/services/mission.service.ts:16","src/services/mission.service.ts:19","src/services/mission.service.ts:22","src/services/mission.service.ts:5","src/services/mission.service.ts:6","src/services/mission.service.ts:7","src/services/mission.service.ts:8","start","startfn","string","this.achievefn","this.nam","this.point","this.startfn","true","type","valu","void"],"injectables/ProgressBarService.html":["0","angular/cor","bar.service.t","bar.service.ts:17","bar.service.ts:26","bar.service.ts:29","bar.service.ts:5","bar.service.ts:6","bar.service.ts:7","bar.service.ts:8","boolean","class","constructor","constructor(maxpoint","default","defin","descript","export","fals","file","function","getprogress","getprogress(point","import","index","info","inject","isful","match","maxpoint","method","name","number","option","paramet","point","privat","progressbarservic","properti","public","result","return","sourc","src/services/progress","start","startfn","this.isful","this.maxpoint","this.startfn","this.updatefn","true","type","updat","update(point","updatefn","valu","void"],"interfaces/Level.html":["badg","defin","export","file","icon","index","info","interfac","level","liter","match","max","min","number","properti","rang","result","sourc","src/interface/level.interface.t","src/interface/level.interface.ts:2","src/interface/level.interface.ts:3","src/interface/level.interface.ts:4","string","type"],"coverage.html":["0","0/24","0/4","0/5","0/7","bar.service.t","breakpointservic","coverag","document","file","gamificationservic","identifi","inject","interfac","level","match","missionservic","new","progressbarservic","result","src/interface/level.interface.t","src/services/breakpoint.service.t","src/services/gamification.service.t","src/services/mission.service.t","src/services/progress","statement","tabl","tablesort(document.getelementbyid('coverag","type"]},"length":12},"tokenStore":{"root":{"0":{"docs":{"index.html":{"ref":"index.html","tf":0.008064516129032258},"injectables/GamificationService.html":{"ref":"injectables/GamificationService.html","tf":0.004405286343612335},"injectables/MissionService.html":{"ref":"injectables/MissionService.html","tf":0.011627906976744186},"injectables/ProgressBarService.html":{"ref":"injectables/ProgressBarService.html","tf":0.011428571428571429},"coverage.html":{"ref":"coverage.html","tf":0.1282051282051282}},"/":{"2":{"4":{"docs":{"coverage.html":{"ref":"coverage.html","tf":0.02564102564102564}}},"docs":{}},"4":{"docs":{"coverage.html":{"ref":"coverage.html","tf":0.02564102564102564}}},"5":{"docs":{"coverage.html":{"ref":"coverage.html","tf":0.02564102564102564}}},"7":{"docs":{"coverage.html":{"ref":"coverage.html","tf":0.05128205128205128}}},"docs":{}}},"1":{"0":{"0":{"docs":{"index.html":{"ref":"index.html","tf":0.005376344086021506}}},"docs":{"index.html":{"ref":"index.html","tf":0.002688172043010753}}},"4":{"docs":{"changelog.html":{"ref":"changelog.html","tf":0.05555555555555555}}},"6":{"docs":{"changelog.html":{"ref":"changelog.html","tf":0.05555555555555555}}},"9":{"9":{"docs":{"index.html":{"ref":"index.html","tf":0.002688172043010753}}},"docs":{}},"docs":{"index.html":{"ref":"index.html","tf":0.008064516129032258},"overview.html":{"ref":"overview.html","tf":0.09090909090909091}}},"2":{"0":{"0":{"docs":{"index.html":{"ref":"index.html","tf":0.005376344086021506}}},"1":{"8":{"docs":{"changelog.html":{"ref":"changelog.html","tf":0.1111111111111111},"license.html":{"ref":"license.html","tf":0.010309278350515464}}},"docs":{}},"docs":{}},"9":{"9":{"docs":{"index.html":{"ref":"index.html","tf":0.002688172043010753}}},"docs":{}},"docs":{"index.html":{"ref":"index.html","tf":0.005376344086021506}}},"3":{"0":{"0":{"docs":{"index.html":{"ref":"index.html","tf":0.005376344086021506}}},"docs":{"index.html":{"ref":"index.html","tf":0.002688172043010753}}},"9":{"9":{"docs":{"index.html":{"ref":"index.html","tf":0.002688172043010753}}},"docs":{}},"docs":{"index.html":{"ref":"index.html","tf":0.005376344086021506}}},"4":{"0":{"0":{"docs":{"index.html":{"ref":"index.html","tf":0.010752688172043012}}},"docs":{}},"9":{"9":{"docs":{"index.html":{"ref":"index.html","tf":0.002688172043010753}}},"docs":{}},"docs":{"index.html":{"ref":"index.html","tf":0.005376344086021506},"overview.html":{"ref":"overview.html","tf":0.045454545454545456}}},"5":{"0":{"0":{"docs":{"index.html":{"ref":"index.html","tf":0.002688172043010753}}},"docs":{"index.html":{"ref":"index.html","tf":0.002688172043010753}}},"9":{"9":{"docs":{"index.html":{"ref":"index.html","tf":0.002688172043010753}}},"docs":{}},"docs":{}},"6":{"0":{"0":{"docs":{"index.html":{"ref":"index.html","tf":0.002688172043010753}}},"docs":{}},"9":{"9":{"docs":{"index.html":{"ref":"index.html","tf":0.002688172043010753}}},"docs":{}},"docs":{}},"7":{"0":{"0":{"docs":{"index.html":{"ref":"index.html","tf":0.002688172043010753}}},"docs":{}},"9":{"9":{"docs":{"index.html":{"ref":"index.html","tf":0.002688172043010753}}},"docs":{}},"docs":{}},"8":{"0":{"0":{"docs":{"index.html":{"ref":"index.html","tf":0.002688172043010753}}},"docs":{}},"9":{"9":{"docs":{"index.html":{"ref":"index.html","tf":0.002688172043010753}}},"docs":{}},"docs":{}},"9":{"0":{"0":{"docs":{"index.html":{"ref":"index.html","tf":0.002688172043010753}}},"docs":{}},"9":{"9":{"docs":{"index.html":{"ref":"index.html","tf":0.002688172043010753}}},"docs":{"index.html":{"ref":"index.html","tf":0.002688172043010753}}},"docs":{}},"docs":{},"a":{"docs":{},"c":{"docs":{},"h":{"docs":{},"i":{"docs":{},"e":{"docs":{},"v":{"docs":{"index.html":{"ref":"index.html","tf":0.008064516129032258},"injectables/MissionService.html":{"ref":"injectables/MissionService.html","tf":0.023255813953488372}},"e":{"docs":{},"f":{"docs":{},"n":{"docs":{"injectables/GamificationService.html":{"ref":"injectables/GamificationService.html","tf":0.00881057268722467},"injectables/MissionService.html":{"ref":"injectables/MissionService.html","tf":0.046511627906976744}}}},"m":{"docs":{},"i":{"docs":{},"s":{"docs":{},"s":{"docs":{"injectables/GamificationService.html":{"ref":"injectables/GamificationService.html","tf":0.004405286343612335}},"i":{"docs":{},"o":{"docs":{},"n":{"docs":{},"(":{"docs":{},"n":{"docs":{},"a":{"docs":{},"m":{"docs":{"injectables/GamificationService.html":{"ref":"injectables/GamificationService.html","tf":0.004405286343612335}}}}}}}}}}}}}}}}}},"c":{"docs":{},"e":{"docs":{},"p":{"docs":{},"t":{"docs":{"changelog.html":{"ref":"changelog.html","tf":0.05555555555555555}}}}}},"t":{"docs":{},"i":{"docs":{},"o":{"docs":{},"n":{"docs":{"license.html":{"ref":"license.html","tf":0.010309278350515464},"injectables/BreakpointService.html":{"ref":"injectables/BreakpointService.html","tf":0.09302325581395349}},"f":{"docs":{},"u":{"docs":{},"n":{"docs":{},"c":{"docs":{"injectables/BreakpointService.html":{"ref":"injectables/BreakpointService.html","tf":0.046511627906976744}}}}},"n":{"docs":{"injectables/GamificationService.html":{"ref":"injectables/GamificationService.html","tf":0.00881057268722467}}}}}}}}},"d":{"docs":{},"d":{"docs":{},"(":{"docs":{},"n":{"docs":{},"a":{"docs":{},"m":{"docs":{"index.html":{"ref":"index.html","tf":0.002688172043010753}}}}}},"b":{"docs":{},"r":{"docs":{},"e":{"docs":{},"a":{"docs":{},"k":{"docs":{},"p":{"docs":{},"o":{"docs":{},"i":{"docs":{},"n":{"docs":{},"t":{"docs":{"injectables/GamificationService.html":{"ref":"injectables/GamificationService.html","tf":0.004405286343612335}},"(":{"docs":{},"p":{"docs":{},"o":{"docs":{},"i":{"docs":{},"n":{"docs":{},"t":{"docs":{"injectables/GamificationService.html":{"ref":"injectables/GamificationService.html","tf":0.004405286343612335}}}}}}}}}}}}}}}}}},"c":{"docs":{},"o":{"docs":{},"m":{"docs":{},"p":{"docs":{},"o":{"docs":{},"n":{"docs":{"injectables/GamificationService.html":{"ref":"injectables/GamificationService.html","tf":0.004405286343612335}},"e":{"docs":{},"n":{"docs":{},"t":{"docs":{},"(":{"docs":{},"p":{"docs":{},"o":{"docs":{},"i":{"docs":{},"n":{"docs":{},"t":{"docs":{"injectables/GamificationService.html":{"ref":"injectables/GamificationService.html","tf":0.004405286343612335}}}}}}}}}}}}}}}}},"l":{"docs":{},"e":{"docs":{},"v":{"docs":{},"e":{"docs":{},"l":{"docs":{"injectables/GamificationService.html":{"ref":"injectables/GamificationService.html","tf":0.004405286343612335}},"(":{"docs":{},"l":{"docs":{},"e":{"docs":{},"v":{"docs":{},"e":{"docs":{},"l":{"docs":{"injectables/GamificationService.html":{"ref":"injectables/GamificationService.html","tf":0.004405286343612335}}}}}}}}}}}}},"m":{"docs":{},"i":{"docs":{},"s":{"docs":{},"s":{"docs":{"injectables/GamificationService.html":{"ref":"injectables/GamificationService.html","tf":0.004405286343612335}},"i":{"docs":{},"o":{"docs":{},"n":{"docs":{},"(":{"docs":{},"n":{"docs":{},"a":{"docs":{},"m":{"docs":{"injectables/GamificationService.html":{"ref":"injectables/GamificationService.html","tf":0.004405286343612335}}}}}}}}}}}}},"p":{"docs":{},"o":{"docs":{},"i":{"docs":{},"n":{"docs":{},"t":{"docs":{"injectables/GamificationService.html":{"ref":"injectables/GamificationService.html","tf":0.004405286343612335}},"s":{"docs":{},"(":{"docs":{},"p":{"docs":{},"o":{"docs":{},"i":{"docs":{},"n":{"docs":{},"t":{"docs":{"injectables/GamificationService.html":{"ref":"injectables/GamificationService.html","tf":0.004405286343612335}}}}}}}}}}}}}}}},"n":{"docs":{},"g":{"docs":{},"u":{"docs":{},"l":{"docs":{},"a":{"docs":{},"r":{"docs":{"index.html":{"ref":"index.html","tf":0.01881720430107527},"changelog.html":{"ref":"changelog.html","tf":0.05555555555555555}},"/":{"docs":{},"c":{"docs":{},"o":{"docs":{},"r":{"docs":{"index.html":{"ref":"index.html","tf":0.005376344086021506},"modules/GamificationModule.html":{"ref":"modules/GamificationModule.html","tf":0.009009009009009009},"injectables/BreakpointService.html":{"ref":"injectables/BreakpointService.html","tf":0.011627906976744186},"injectables/GamificationService.html":{"ref":"injectables/GamificationService.html","tf":0.0022026431718061676},"injectables/MissionService.html":{"ref":"injectables/MissionService.html","tf":0.005813953488372093},"injectables/ProgressBarService.html":{"ref":"injectables/ProgressBarService.html","tf":0.005714285714285714}}}}}}}}}}},"d":{"docs":{},"/":{"docs":{},"o":{"docs":{},"r":{"docs":{"license.html":{"ref":"license.html","tf":0.010309278350515464}}}}}}},"p":{"docs":{},"p":{"docs":{"index.html":{"ref":"index.html","tf":0.008064516129032258}},".":{"docs":{},"c":{"docs":{},"o":{"docs":{},"m":{"docs":{},"p":{"docs":{},"o":{"docs":{},"n":{"docs":{},"e":{"docs":{},"n":{"docs":{},"t":{"docs":{},".":{"docs":{},"c":{"docs":{},"s":{"docs":{},"s":{"docs":{"index.html":{"ref":"index.html","tf":0.002688172043010753}}}}},"h":{"docs":{},"t":{"docs":{},"m":{"docs":{},"l":{"docs":{"index.html":{"ref":"index.html","tf":0.002688172043010753}}}}}},"t":{"docs":{"index.html":{"ref":"index.html","tf":0.002688172043010753}}}}}}}}}}}}},"m":{"docs":{},"o":{"docs":{},"d":{"docs":{},"u":{"docs":{},"l":{"docs":{},"e":{"docs":{},".":{"docs":{},"t":{"docs":{"index.html":{"ref":"index.html","tf":0.002688172043010753}}}}}}}}}}},"c":{"docs":{},"o":{"docs":{},"m":{"docs":{},"p":{"docs":{},"o":{"docs":{},"n":{"docs":{"index.html":{"ref":"index.html","tf":0.002688172043010753}}}}}}}},"l":{"docs":{},"i":{"docs":{},"c":{"docs":{"index.html":{"ref":"index.html","tf":0.002688172043010753}}}}},"m":{"docs":{},"o":{"docs":{},"d":{"docs":{},"u":{"docs":{},"l":{"docs":{"modules/GamificationModule.html":{"ref":"modules/GamificationModule.html","tf":0.009009009009009009}}}}}}}}},"s":{"docs":{},"s":{"docs":{},"e":{"docs":{},"t":{"docs":{},"s":{"docs":{},"/":{"docs":{},"b":{"docs":{},"a":{"docs":{},"d":{"docs":{},"g":{"docs":{},"e":{"docs":{},"s":{"docs":{},"/":{"docs":{},"b":{"docs":{},"e":{"docs":{},"g":{"docs":{},"i":{"docs":{},"n":{"docs":{},"n":{"docs":{},"e":{"docs":{},"r":{"docs":{},".":{"docs":{},"s":{"docs":{},"v":{"docs":{},"g":{"docs":{"index.html":{"ref":"index.html","tf":0.002688172043010753}}}}}}}}}}}}}},"c":{"docs":{},"o":{"docs":{},"n":{"docs":{},"s":{"docs":{},"t":{"docs":{},"a":{"docs":{},"n":{"docs":{},"t":{"docs":{},".":{"docs":{},"s":{"docs":{},"v":{"docs":{},"g":{"docs":{"index.html":{"ref":"index.html","tf":0.002688172043010753}}}}}}}}}}}}}},"k":{"docs":{},"i":{"docs":{},"n":{"docs":{},"g":{"docs":{},".":{"docs":{},"s":{"docs":{},"v":{"docs":{},"g":{"docs":{"index.html":{"ref":"index.html","tf":0.002688172043010753}}}}}}}}}},"l":{"docs":{},"o":{"docs":{},"r":{"docs":{},"d":{"docs":{},".":{"docs":{},"s":{"docs":{},"v":{"docs":{},"g":{"docs":{"index.html":{"ref":"index.html","tf":0.002688172043010753}}}}}}}}}},"n":{"docs":{},"i":{"docs":{},"c":{"docs":{},"e":{"docs":{},".":{"docs":{},"s":{"docs":{},"v":{"docs":{},"g":{"docs":{"index.html":{"ref":"index.html","tf":0.002688172043010753}}}}}}}},"n":{"docs":{},"j":{"docs":{},"a":{"docs":{},".":{"docs":{},"s":{"docs":{},"v":{"docs":{},"g":{"docs":{"index.html":{"ref":"index.html","tf":0.002688172043010753}}}}}}}}}}},"p":{"docs":{},"a":{"docs":{},"r":{"docs":{},"t":{"docs":{},"n":{"docs":{},"e":{"docs":{},"r":{"docs":{},".":{"docs":{},"s":{"docs":{},"v":{"docs":{},"g":{"docs":{"index.html":{"ref":"index.html","tf":0.002688172043010753}}}}}}}}}}}},"o":{"docs":{},"w":{"docs":{},"e":{"docs":{},"r":{"docs":{},".":{"docs":{},"s":{"docs":{},"v":{"docs":{},"g":{"docs":{"index.html":{"ref":"index.html","tf":0.002688172043010753}}}}}}}}}}},"u":{"docs":{},"s":{"docs":{},"u":{"docs":{},"a":{"docs":{},"l":{"docs":{},".":{"docs":{},"s":{"docs":{},"v":{"docs":{},"g":{"docs":{"index.html":{"ref":"index.html","tf":0.002688172043010753}}}}}}}}}}},"v":{"docs":{},"i":{"docs":{},"p":{"docs":{},".":{"docs":{},"s":{"docs":{},"v":{"docs":{},"g":{"docs":{"index.html":{"ref":"index.html","tf":0.002688172043010753}}}}}}}}}}}}}}}}}}}},"o":{"docs":{},"c":{"docs":{},"i":{"docs":{"license.html":{"ref":"license.html","tf":0.010309278350515464}}}}}}},"b":{"docs":{},"o":{"docs":{},"v":{"docs":{"license.html":{"ref":"license.html","tf":0.010309278350515464}}}}},"r":{"docs":{},"i":{"docs":{},"s":{"docs":{"license.html":{"ref":"license.html","tf":0.010309278350515464}}}},"r":{"docs":{},"a":{"docs":{},"y":{"docs":{"injectables/GamificationService.html":{"ref":"injectables/GamificationService.html","tf":0.013215859030837005}}}}}},"u":{"docs":{},"t":{"docs":{},"h":{"docs":{},"o":{"docs":{},"r":{"docs":{"license.html":{"ref":"license.html","tf":0.010309278350515464}}}}}}},"v":{"docs":{},"a":{"docs":{},"i":{"docs":{},"l":{"docs":{"modules.html":{"ref":"modules.html","tf":0.1111111111111111}}}}}}},"b":{"docs":{},"a":{"docs":{},"d":{"docs":{},"g":{"docs":{"index.html":{"ref":"index.html","tf":0.026881720430107527},"interfaces/Level.html":{"ref":"interfaces/Level.html","tf":0.0784313725490196}}}},"s":{"docs":{},"e":{"docs":{"index.html":{"ref":"index.html","tf":0.002688172043010753}}}},"r":{"docs":{},".":{"docs":{},"s":{"docs":{},"e":{"docs":{},"r":{"docs":{},"v":{"docs":{},"i":{"docs":{},"c":{"docs":{"injectables/GamificationService.html":{"ref":"injectables/GamificationService.html","tf":0.0022026431718061676}},"e":{"docs":{},".":{"docs":{},"t":{"docs":{"injectables/ProgressBarService.html":{"ref":"injectables/ProgressBarService.html","tf":0.005714285714285714},"coverage.html":{"ref":"coverage.html","tf":0.02564102564102564}},"s":{"docs":{},":":{"1":{"7":{"docs":{"injectables/ProgressBarService.html":{"ref":"injectables/ProgressBarService.html","tf":0.005714285714285714}}},"docs":{}},"2":{"6":{"docs":{"injectables/ProgressBarService.html":{"ref":"injectables/ProgressBarService.html","tf":0.005714285714285714}}},"9":{"docs":{"injectables/ProgressBarService.html":{"ref":"injectables/ProgressBarService.html","tf":0.005714285714285714}}},"docs":{}},"5":{"docs":{"injectables/ProgressBarService.html":{"ref":"injectables/ProgressBarService.html","tf":0.005714285714285714}}},"6":{"docs":{"injectables/ProgressBarService.html":{"ref":"injectables/ProgressBarService.html","tf":0.005714285714285714}}},"7":{"docs":{"injectables/ProgressBarService.html":{"ref":"injectables/ProgressBarService.html","tf":0.005714285714285714}}},"8":{"docs":{"injectables/ProgressBarService.html":{"ref":"injectables/ProgressBarService.html","tf":0.011428571428571429}}},"docs":{}}}}}}}}}}}}}}},"e":{"docs":{},"g":{"docs":{},"i":{"docs":{},"n":{"docs":{},"n":{"docs":{"index.html":{"ref":"index.html","tf":0.002688172043010753}}}}}}},"o":{"docs":{},"o":{"docs":{},"t":{"docs":{},"s":{"docs":{},"t":{"docs":{},"r":{"docs":{},"a":{"docs":{},"p":{"docs":{"overview.html":{"ref":"overview.html","tf":0.045454545454545456}}}}}}}},"l":{"docs":{},"e":{"docs":{},"a":{"docs":{},"n":{"docs":{"injectables/ProgressBarService.html":{"ref":"injectables/ProgressBarService.html","tf":0.017142857142857144}}}}}}}},"r":{"docs":{},"o":{"docs":{},"w":{"docs":{},"s":{"docs":{"modules.html":{"ref":"modules.html","tf":0.1111111111111111}}}}},"e":{"docs":{},"a":{"docs":{},"k":{"docs":{},"p":{"docs":{},"o":{"docs":{},"i":{"docs":{},"n":{"docs":{},"t":{"docs":{"injectables/GamificationService.html":{"ref":"injectables/GamificationService.html","tf":0.011013215859030838}},"s":{"docs":{},"e":{"docs":{},"r":{"docs":{},"v":{"docs":{},"i":{"docs":{},"c":{"docs":{"injectables/BreakpointService.html":{"ref":"injectables/BreakpointService.html","tf":5.023255813953488},"injectables/GamificationService.html":{"ref":"injectables/GamificationService.html","tf":0.0022026431718061676},"coverage.html":{"ref":"coverage.html","tf":0.02564102564102564}},"e":{"docs":{},"(":{"docs":{},"p":{"docs":{},"o":{"docs":{},"i":{"docs":{},"n":{"docs":{},"t":{"docs":{"injectables/GamificationService.html":{"ref":"injectables/GamificationService.html","tf":0.0022026431718061676}}}}}}}}}}}}}}},".":{"docs":{},"s":{"docs":{},"e":{"docs":{},"r":{"docs":{},"v":{"docs":{},"i":{"docs":{},"c":{"docs":{"injectables/GamificationService.html":{"ref":"injectables/GamificationService.html","tf":0.0022026431718061676}}}}}}}}}}}}}}}}}}},"c":{"docs":{"license.html":{"ref":"license.html","tf":0.010309278350515464}},"a":{"docs":{},"l":{"docs":{},"l":{"docs":{},"b":{"docs":{},"a":{"docs":{},"c":{"docs":{},"k":{"docs":{"index.html":{"ref":"index.html","tf":0.016129032258064516}}}}}}}}},"h":{"docs":{},"a":{"docs":{},"n":{"docs":{},"g":{"docs":{"index.html":{"ref":"index.html","tf":0.002688172043010753}},"e":{"docs":{},"l":{"docs":{},"o":{"docs":{},"g":{"docs":{"index.html":{"ref":"index.html","tf":0.002688172043010753},"changelog.html":{"ref":"changelog.html","tf":3.3888888888888884}}}}}}}},"r":{"docs":{},"g":{"docs":{"license.html":{"ref":"license.html","tf":0.010309278350515464}}}}},"i":{"docs":{},"l":{"docs":{},"d":{"docs":{"modules/GamificationModule.html":{"ref":"modules/GamificationModule.html","tf":0.009009009009009009}}}}}},"l":{"docs":{},"a":{"docs":{},"s":{"docs":{},"s":{"docs":{"index.html":{"ref":"index.html","tf":0.005376344086021506},"modules/GamificationModule.html":{"ref":"modules/GamificationModule.html","tf":0.009009009009009009},"injectables/BreakpointService.html":{"ref":"injectables/BreakpointService.html","tf":0.011627906976744186},"injectables/GamificationService.html":{"ref":"injectables/GamificationService.html","tf":0.0022026431718061676},"injectables/MissionService.html":{"ref":"injectables/MissionService.html","tf":0.005813953488372093},"injectables/ProgressBarService.html":{"ref":"injectables/ProgressBarService.html","tf":0.005714285714285714}}}},"i":{"docs":{},"m":{"docs":{"license.html":{"ref":"license.html","tf":0.010309278350515464}}}}}},"o":{"docs":{},"m":{"docs":{},"m":{"docs":{},"a":{"docs":{},"n":{"docs":{},"d":{"docs":{"index.html":{"ref":"index.html","tf":0.002688172043010753}}}}}},"p":{"docs":{},"o":{"docs":{},"n":{"docs":{"index.html":{"ref":"index.html","tf":0.01881720430107527},"modules/GamificationModule.html":{"ref":"modules/GamificationModule.html","tf":0.02702702702702703},"injectables/GamificationService.html":{"ref":"injectables/GamificationService.html","tf":0.013215859030837005}},"e":{"docs":{},"n":{"docs":{},"t":{"docs":{},".":{"docs":{},"s":{"docs":{},"t":{"docs":{},"a":{"docs":{},"r":{"docs":{},"t":{"docs":{"injectables/GamificationService.html":{"ref":"injectables/GamificationService.html","tf":0.0022026431718061676}}}}}}}}}}}}}}},"n":{"docs":{},"f":{"docs":{},"i":{"docs":{},"g":{"docs":{"index.html":{"ref":"index.html","tf":0.002688172043010753},"changelog.html":{"ref":"changelog.html","tf":0.05555555555555555},"modules/GamificationModule.html":{"ref":"modules/GamificationModule.html","tf":0.05405405405405406},"injectables/GamificationService.html":{"ref":"injectables/GamificationService.html","tf":0.006607929515418502}},"u":{"docs":{},"r":{"docs":{"index.html":{"ref":"index.html","tf":0.005376344086021506}}}},".":{"docs":{},"l":{"docs":{},"e":{"docs":{},"v":{"docs":{},"e":{"docs":{},"l":{"docs":{"injectables/GamificationService.html":{"ref":"injectables/GamificationService.html","tf":0.004405286343612335}}}}}}},"p":{"docs":{},"o":{"docs":{},"i":{"docs":{},"n":{"docs":{},"t":{"docs":{"injectables/GamificationService.html":{"ref":"injectables/GamificationService.html","tf":0.0022026431718061676}}}}}}}}}}},"s":{"docs":{},"o":{"docs":{},"l":{"docs":{},"e":{"docs":{},".":{"docs":{},"i":{"docs":{},"n":{"docs":{},"f":{"docs":{},"o":{"docs":{},"(":{"docs":{},"'":{"docs":{},"c":{"docs":{},"o":{"docs":{},"m":{"docs":{},"p":{"docs":{},"o":{"docs":{},"n":{"docs":{"index.html":{"ref":"index.html","tf":0.002688172043010753}}}}}}}}}}}}}},"l":{"docs":{},"o":{"docs":{},"g":{"docs":{},"(":{"docs":{},"'":{"docs":{},"a":{"docs":{},"d":{"docs":{},"d":{"docs":{"index.html":{"ref":"index.html","tf":0.005376344086021506}}}}},"b":{"docs":{},"r":{"docs":{},"e":{"docs":{},"a":{"docs":{},"k":{"docs":{},"p":{"docs":{},"o":{"docs":{},"i":{"docs":{},"n":{"docs":{},"t":{"docs":{"index.html":{"ref":"index.html","tf":0.010752688172043012}}}}}}}}}}}},"c":{"docs":{},"o":{"docs":{},"m":{"docs":{},"p":{"docs":{},"o":{"docs":{},"n":{"docs":{"index.html":{"ref":"index.html","tf":0.002688172043010753}}}}}},"n":{"docs":{},"f":{"docs":{},"i":{"docs":{},"g":{"docs":{"injectables/GamificationService.html":{"ref":"injectables/GamificationService.html","tf":0.0022026431718061676}}}}}}}},"d":{"docs":{},"e":{"docs":{},"l":{"docs":{},"e":{"docs":{},"t":{"docs":{"index.html":{"ref":"index.html","tf":0.005376344086021506}}}}}}},"g":{"docs":{},"a":{"docs":{},"m":{"docs":{},"i":{"docs":{},"f":{"docs":{"index.html":{"ref":"index.html","tf":0.002688172043010753}}}}}}},"s":{"docs":{},"a":{"docs":{},"v":{"docs":{"index.html":{"ref":"index.html","tf":0.005376344086021506}}}}}}}}}}}}}},"t":{"docs":{"index.html":{"ref":"index.html","tf":0.005376344086021506},"injectables/GamificationService.html":{"ref":"injectables/GamificationService.html","tf":0.006607929515418502}},"a":{"docs":{},"n":{"docs":{},"t":{"docs":{"index.html":{"ref":"index.html","tf":0.002688172043010753}}}}},"r":{"docs":{},"u":{"docs":{},"c":{"docs":{},"t":{"docs":{},"o":{"docs":{},"r":{"docs":{"index.html":{"ref":"index.html","tf":0.002688172043010753},"injectables/BreakpointService.html":{"ref":"injectables/BreakpointService.html","tf":0.011627906976744186},"injectables/GamificationService.html":{"ref":"injectables/GamificationService.html","tf":0.0022026431718061676},"injectables/MissionService.html":{"ref":"injectables/MissionService.html","tf":0.005813953488372093},"injectables/ProgressBarService.html":{"ref":"injectables/ProgressBarService.html","tf":0.005714285714285714}},"(":{"docs":{},"p":{"docs":{},"u":{"docs":{},"b":{"docs":{},"l":{"docs":{"index.html":{"ref":"index.html","tf":0.002688172043010753}}}}},"o":{"docs":{},"i":{"docs":{},"n":{"docs":{},"t":{"docs":{},"s":{"docs":{},"t":{"docs":{},"h":{"docs":{},"r":{"docs":{},"e":{"docs":{},"s":{"docs":{},"h":{"docs":{},"o":{"docs":{},"l":{"docs":{},"d":{"docs":{"injectables/BreakpointService.html":{"ref":"injectables/BreakpointService.html","tf":0.023255813953488372}}}}}}}}}}}}}}}}},"@":{"docs":{},"i":{"docs":{},"n":{"docs":{},"j":{"docs":{},"e":{"docs":{},"c":{"docs":{},"t":{"docs":{},"(":{"docs":{},"'":{"docs":{},"c":{"docs":{},"o":{"docs":{},"n":{"docs":{},"f":{"docs":{},"i":{"docs":{},"g":{"docs":{"injectables/GamificationService.html":{"ref":"injectables/GamificationService.html","tf":0.0022026431718061676}}}}}}}}}}}}}}}}},"c":{"docs":{},"o":{"docs":{},"n":{"docs":{},"f":{"docs":{},"i":{"docs":{},"g":{"docs":{"injectables/GamificationService.html":{"ref":"injectables/GamificationService.html","tf":0.0022026431718061676}}}}}}}},"n":{"docs":{},"a":{"docs":{},"m":{"docs":{"injectables/MissionService.html":{"ref":"injectables/MissionService.html","tf":0.011627906976744186}}}}},"m":{"docs":{},"a":{"docs":{},"x":{"docs":{},"p":{"docs":{},"o":{"docs":{},"i":{"docs":{},"n":{"docs":{},"t":{"docs":{"injectables/ProgressBarService.html":{"ref":"injectables/ProgressBarService.html","tf":0.011428571428571429}}}}}}}}}}}}}}}}}},"i":{"docs":{},"d":{"docs":{"modules/GamificationModule.html":{"ref":"modules/GamificationModule.html","tf":0.018018018018018018}}}}},"t":{"docs":{},"e":{"docs":{},"n":{"docs":{},"t":{"docs":{"index.html":{"ref":"index.html","tf":0.002688172043010753}}}}},"r":{"docs":{},"a":{"docs":{},"c":{"docs":{},"t":{"docs":{"license.html":{"ref":"license.html","tf":0.010309278350515464}}}}}}},"d":{"docs":{},"i":{"docs":{},"t":{"docs":{"license.html":{"ref":"license.html","tf":0.010309278350515464}}}}},"n":{"docs":{},"e":{"docs":{},"c":{"docs":{},"t":{"docs":{"license.html":{"ref":"license.html","tf":0.010309278350515464}}}}}}},"v":{"docs":{},"e":{"docs":{},"r":{"docs":{},"a":{"docs":{},"g":{"docs":{"index.html":{"ref":"index.html","tf":0.002688172043010753},"coverage.html":{"ref":"coverage.html","tf":10.025641025641026}}}}}}},"p":{"docs":{},"i":{"docs":{"license.html":{"ref":"license.html","tf":0.041237113402061855}}},"y":{"docs":{},"r":{"docs":{},"i":{"docs":{},"g":{"docs":{},"h":{"docs":{},"t":{"docs":{"license.html":{"ref":"license.html","tf":0.030927835051546393}}}}}}}}}},"r":{"docs":{},"e":{"docs":{},"a":{"docs":{},"t":{"docs":{"changelog.html":{"ref":"changelog.html","tf":0.05555555555555555}}}}}}},"d":{"docs":{},"e":{"docs":{},"l":{"docs":{},"e":{"docs":{},"t":{"docs":{},"e":{"docs":{},"(":{"docs":{},"h":{"docs":{},"e":{"docs":{},"r":{"docs":{},"o":{"docs":{"index.html":{"ref":"index.html","tf":0.002688172043010753}}}}}}}}}}},"m":{"docs":{},"o":{"docs":{"index.html":{"ref":"index.html","tf":0.008064516129032258}}}},"c":{"docs":{},"l":{"docs":{},"a":{"docs":{},"r":{"docs":{"overview.html":{"ref":"overview.html","tf":0.045454545454545456},"modules/GamificationModule.html":{"ref":"modules/GamificationModule.html","tf":0.009009009009009009}}}}}},"p":{"docs":{},"e":{"docs":{},"n":{"docs":{},"d":{"docs":{"overview.html":{"ref":"overview.html","tf":0.045454545454545456}}}}}},"a":{"docs":{},"l":{"docs":{"license.html":{"ref":"license.html","tf":0.020618556701030927}}}},"f":{"docs":{},"i":{"docs":{},"n":{"docs":{"injectables/BreakpointService.html":{"ref":"injectables/BreakpointService.html","tf":0.046511627906976744},"injectables/GamificationService.html":{"ref":"injectables/GamificationService.html","tf":0.05066079295154185},"injectables/MissionService.html":{"ref":"injectables/MissionService.html","tf":0.046511627906976744},"injectables/ProgressBarService.html":{"ref":"injectables/ProgressBarService.html","tf":0.045714285714285714},"interfaces/Level.html":{"ref":"interfaces/Level.html","tf":0.058823529411764705}}}},"a":{"docs":{},"u":{"docs":{},"l":{"docs":{},"t":{"docs":{"injectables/GamificationService.html":{"ref":"injectables/GamificationService.html","tf":0.0022026431718061676},"injectables/MissionService.html":{"ref":"injectables/MissionService.html","tf":0.011627906976744186},"injectables/ProgressBarService.html":{"ref":"injectables/ProgressBarService.html","tf":0.005714285714285714}}}}}}},"s":{"docs":{},"c":{"docs":{},"r":{"docs":{},"i":{"docs":{},"p":{"docs":{},"t":{"docs":{"injectables/BreakpointService.html":{"ref":"injectables/BreakpointService.html","tf":0.011627906976744186},"injectables/GamificationService.html":{"ref":"injectables/GamificationService.html","tf":0.024229074889867842},"injectables/MissionService.html":{"ref":"injectables/MissionService.html","tf":0.011627906976744186},"injectables/ProgressBarService.html":{"ref":"injectables/ProgressBarService.html","tf":0.017142857142857144}}}}}}}}},"o":{"docs":{},"c":{"docs":{},"u":{"docs":{},"m":{"docs":{},"e":{"docs":{},"n":{"docs":{},"t":{"docs":{"index.html":{"ref":"index.html","tf":0.008064516129032258},"license.html":{"ref":"license.html","tf":0.010309278350515464},"coverage.html":{"ref":"coverage.html","tf":0.02564102564102564}}}}}}}}},"a":{"docs":{},"m":{"docs":{},"a":{"docs":{},"g":{"docs":{"license.html":{"ref":"license.html","tf":0.010309278350515464}}}}}},"i":{"docs":{},"s":{"docs":{},"t":{"docs":{},"r":{"docs":{},"i":{"docs":{},"b":{"docs":{},"u":{"docs":{},"t":{"docs":{"license.html":{"ref":"license.html","tf":0.010309278350515464}}}}}}}}},"f":{"docs":{},"f":{"docs":{},"e":{"docs":{},"r":{"docs":{"modules/GamificationModule.html":{"ref":"modules/GamificationModule.html","tf":0.009009009009009009}}}}}},"r":{"docs":{},"e":{"docs":{},"c":{"docs":{},"t":{"docs":{"modules/GamificationModule.html":{"ref":"modules/GamificationModule.html","tf":0.02702702702702703}}}}}}}},"e":{"docs":{},"s":{"5":{"docs":{"index.html":{"ref":"index.html","tf":0.002688172043010753}}},"6":{"docs":{"index.html":{"ref":"index.html","tf":0.002688172043010753}}},"docs":{}},"x":{"docs":{},"a":{"docs":{},"m":{"docs":{},"p":{"docs":{},"l":{"docs":{"index.html":{"ref":"index.html","tf":0.008064516129032258}}}}}},"p":{"docs":{},"o":{"docs":{},"r":{"docs":{},"t":{"docs":{"index.html":{"ref":"index.html","tf":0.005376344086021506},"overview.html":{"ref":"overview.html","tf":0.045454545454545456},"modules/GamificationModule.html":{"ref":"modules/GamificationModule.html","tf":0.02702702702702703},"injectables/BreakpointService.html":{"ref":"injectables/BreakpointService.html","tf":0.011627906976744186},"injectables/GamificationService.html":{"ref":"injectables/GamificationService.html","tf":0.0022026431718061676},"injectables/MissionService.html":{"ref":"injectables/MissionService.html","tf":0.005813953488372093},"injectables/ProgressBarService.html":{"ref":"injectables/ProgressBarService.html","tf":0.005714285714285714},"interfaces/Level.html":{"ref":"interfaces/Level.html","tf":0.0196078431372549}}}}},"r":{"docs":{},"e":{"docs":{},"s":{"docs":{},"s":{"docs":{"license.html":{"ref":"license.html","tf":0.010309278350515464}}}}}}}},"v":{"docs":{},"e":{"docs":{},"n":{"docs":{},"t":{"docs":{"license.html":{"ref":"license.html","tf":0.010309278350515464}}}}}}},"f":{"docs":{},"i":{"docs":{},"l":{"docs":{},"e":{"docs":{"index.html":{"ref":"index.html","tf":0.002688172043010753},"license.html":{"ref":"license.html","tf":0.010309278350515464},"modules/GamificationModule.html":{"ref":"modules/GamificationModule.html","tf":0.009009009009009009},"injectables/BreakpointService.html":{"ref":"injectables/BreakpointService.html","tf":0.011627906976744186},"injectables/GamificationService.html":{"ref":"injectables/GamificationService.html","tf":0.0022026431718061676},"injectables/MissionService.html":{"ref":"injectables/MissionService.html","tf":0.005813953488372093},"injectables/ProgressBarService.html":{"ref":"injectables/ProgressBarService.html","tf":0.005714285714285714},"interfaces/Level.html":{"ref":"interfaces/Level.html","tf":0.0196078431372549},"coverage.html":{"ref":"coverage.html","tf":0.02564102564102564}}}},"t":{"docs":{"license.html":{"ref":"license.html","tf":0.010309278350515464}}}},"o":{"docs":{},"l":{"docs":{},"d":{"docs":{},"e":{"docs":{},"r":{"docs":{"index.html":{"ref":"index.html","tf":0.005376344086021506}}}}},"l":{"docs":{},"o":{"docs":{},"w":{"docs":{"index.html":{"ref":"index.html","tf":0.002688172043010753},"license.html":{"ref":"license.html","tf":0.010309278350515464}}}}}},"r":{"docs":{},"c":{"docs":{},"h":{"docs":{},"i":{"docs":{},"l":{"docs":{},"d":{"docs":{"modules/GamificationModule.html":{"ref":"modules/GamificationModule.html","tf":0.009009009009009009}},"(":{"docs":{},"c":{"docs":{},"o":{"docs":{},"n":{"docs":{},"f":{"docs":{},"i":{"docs":{},"g":{"docs":{"modules/GamificationModule.html":{"ref":"modules/GamificationModule.html","tf":0.009009009009009009}}}}}}}}}}}}}},"r":{"docs":{},"o":{"docs":{},"o":{"docs":{},"t":{"docs":{"modules/GamificationModule.html":{"ref":"modules/GamificationModule.html","tf":0.009009009009009009}},"(":{"docs":{},"c":{"docs":{},"o":{"docs":{},"n":{"docs":{},"f":{"docs":{},"i":{"docs":{},"g":{"docs":{"modules/GamificationModule.html":{"ref":"modules/GamificationModule.html","tf":0.009009009009009009}}}}}}}}}}}}}}},"e":{"docs":{},"v":{"docs":{"changelog.html":{"ref":"changelog.html","tf":0.1111111111111111}}},"a":{"docs":{},"t":{"docs":{},"u":{"docs":{},"r":{"docs":{"modules/GamificationModule.html":{"ref":"modules/GamificationModule.html","tf":0.009009009009009009}}}}}}},"r":{"docs":{},"e":{"docs":{},"e":{"docs":{"license.html":{"ref":"license.html","tf":0.010309278350515464}}}}},"u":{"docs":{},"r":{"docs":{},"n":{"docs":{},"i":{"docs":{},"s":{"docs":{},"h":{"docs":{"license.html":{"ref":"license.html","tf":0.010309278350515464}}}}}}},"n":{"docs":{},"c":{"docs":{},"t":{"docs":{},"i":{"docs":{},"o":{"docs":{},"n":{"docs":{"injectables/BreakpointService.html":{"ref":"injectables/BreakpointService.html","tf":0.06976744186046512},"injectables/GamificationService.html":{"ref":"injectables/GamificationService.html","tf":0.03303964757709251},"injectables/MissionService.html":{"ref":"injectables/MissionService.html","tf":0.06976744186046512},"injectables/ProgressBarService.html":{"ref":"injectables/ProgressBarService.html","tf":0.06857142857142857}}}}}}}}},"a":{"docs":{},"l":{"docs":{},"s":{"docs":{"injectables/ProgressBarService.html":{"ref":"injectables/ProgressBarService.html","tf":0.005714285714285714}}}}}},"g":{"docs":{},"a":{"docs":{},"m":{"docs":{},"i":{"docs":{},"f":{"docs":{"index.html":{"ref":"index.html","tf":0.024193548387096774},"changelog.html":{"ref":"changelog.html","tf":0.05555555555555555}},"i":{"docs":{},"c":{"docs":{},"a":{"docs":{},"t":{"docs":{},"i":{"docs":{},"o":{"docs":{},"n":{"docs":{},"m":{"docs":{},"o":{"docs":{},"d":{"docs":{},"u":{"docs":{},"l":{"docs":{"index.html":{"ref":"index.html","tf":0.002688172043010753},"modules.html":{"ref":"modules.html","tf":0.1111111111111111},"modules/GamificationModule.html":{"ref":"modules/GamificationModule.html","tf":5.036036036036036}},"e":{"docs":{},".":{"docs":{},"f":{"docs":{},"o":{"docs":{},"r":{"docs":{},"r":{"docs":{},"o":{"docs":{},"o":{"docs":{},"t":{"docs":{},"(":{"docs":{},"c":{"docs":{},"o":{"docs":{},"n":{"docs":{},"f":{"docs":{},"i":{"docs":{},"g":{"docs":{"index.html":{"ref":"index.html","tf":0.002688172043010753},"modules/GamificationModule.html":{"ref":"modules/GamificationModule.html","tf":0.009009009009009009}}}}}}}}}}}}}}}}}}}}}}},"s":{"docs":{},"e":{"docs":{},"r":{"docs":{},"v":{"docs":{},"i":{"docs":{},"c":{"docs":{"index.html":{"ref":"index.html","tf":0.010752688172043012},"modules/GamificationModule.html":{"ref":"modules/GamificationModule.html","tf":0.08108108108108109},"injectables/GamificationService.html":{"ref":"injectables/GamificationService.html","tf":5.004405286343612},"coverage.html":{"ref":"coverage.html","tf":0.02564102564102564}}}}}}}}}}}}}}}}}}},"e":{"docs":{},"t":{"docs":{"index.html":{"ref":"index.html","tf":3.333333333333333},"changelog.html":{"ref":"changelog.html","tf":3.333333333333333},"license.html":{"ref":"license.html","tf":3.333333333333333}},"h":{"docs":{},"e":{"docs":{},"r":{"docs":{},"o":{"docs":{"index.html":{"ref":"index.html","tf":0.002688172043010753}}}}}},"b":{"docs":{},"r":{"docs":{},"e":{"docs":{},"a":{"docs":{},"k":{"docs":{},"p":{"docs":{},"o":{"docs":{},"i":{"docs":{},"n":{"docs":{},"t":{"docs":{"injectables/GamificationService.html":{"ref":"injectables/GamificationService.html","tf":0.00881057268722467}}}}}}}}}}}},"c":{"docs":{},"o":{"docs":{},"m":{"docs":{},"p":{"docs":{},"o":{"docs":{},"n":{"docs":{"injectables/GamificationService.html":{"ref":"injectables/GamificationService.html","tf":0.00881057268722467}}}}}}}},"l":{"docs":{},"e":{"docs":{},"v":{"docs":{},"e":{"docs":{},"l":{"docs":{"injectables/GamificationService.html":{"ref":"injectables/GamificationService.html","tf":0.01762114537444934}},"b":{"docs":{},"y":{"docs":{},"p":{"docs":{},"o":{"docs":{},"i":{"docs":{},"n":{"docs":{},"t":{"docs":{"injectables/GamificationService.html":{"ref":"injectables/GamificationService.html","tf":0.004405286343612335}},"s":{"docs":{},"(":{"docs":{},"p":{"docs":{},"o":{"docs":{},"i":{"docs":{},"n":{"docs":{},"t":{"docs":{"injectables/GamificationService.html":{"ref":"injectables/GamificationService.html","tf":0.004405286343612335}}}}}}}}}}}}}}}}}}}}},"m":{"docs":{},"i":{"docs":{},"s":{"docs":{},"s":{"docs":{"injectables/GamificationService.html":{"ref":"injectables/GamificationService.html","tf":0.00881057268722467}}}}}},"p":{"docs":{},"o":{"docs":{},"i":{"docs":{},"n":{"docs":{},"t":{"docs":{"injectables/GamificationService.html":{"ref":"injectables/GamificationService.html","tf":0.00881057268722467}}}}}},"r":{"docs":{},"o":{"docs":{},"g":{"docs":{},"r":{"docs":{},"e":{"docs":{},"s":{"docs":{},"s":{"docs":{"injectables/ProgressBarService.html":{"ref":"injectables/ProgressBarService.html","tf":0.011428571428571429}},"(":{"docs":{},"p":{"docs":{},"o":{"docs":{},"i":{"docs":{},"n":{"docs":{},"t":{"docs":{"injectables/ProgressBarService.html":{"ref":"injectables/ProgressBarService.html","tf":0.005714285714285714}}}}}}}}}}}}}}}}}},"u":{"docs":{},"i":{"docs":{"index.html":{"ref":"index.html","tf":0.002688172043010753},"license.html":{"ref":"license.html","tf":0.010309278350515464}}}},"r":{"docs":{},"a":{"docs":{},"n":{"docs":{},"t":{"docs":{"license.html":{"ref":"license.html","tf":0.010309278350515464}}}},"p":{"docs":{},"h":{"docs":{"modules.html":{"ref":"modules.html","tf":0.1111111111111111}}}}}}},"h":{"docs":{"index.html":{"ref":"index.html","tf":0.002688172043010753}},"e":{"docs":{},"r":{"docs":{},"o":{"docs":{"index.html":{"ref":"index.html","tf":0.026881720430107527}},".":{"docs":{},"s":{"docs":{},"e":{"docs":{},"r":{"docs":{},"v":{"docs":{},"i":{"docs":{},"c":{"docs":{"index.html":{"ref":"index.html","tf":0.002688172043010753}}}}}}}}},"e":{"docs":{},"s":{"docs":{},".":{"docs":{},"c":{"docs":{},"o":{"docs":{},"m":{"docs":{},"p":{"docs":{},"o":{"docs":{},"n":{"docs":{},"e":{"docs":{},"n":{"docs":{},"t":{"docs":{},".":{"docs":{},"c":{"docs":{},"s":{"docs":{},"s":{"docs":{"index.html":{"ref":"index.html","tf":0.002688172043010753}}}}},"h":{"docs":{},"t":{"docs":{},"m":{"docs":{},"l":{"docs":{"index.html":{"ref":"index.html","tf":0.002688172043010753}}}}}},"t":{"docs":{"index.html":{"ref":"index.html","tf":0.002688172043010753}}}}}}}}}}}}}},"c":{"docs":{},"o":{"docs":{},"m":{"docs":{},"p":{"docs":{},"o":{"docs":{},"n":{"docs":{"index.html":{"ref":"index.html","tf":0.002688172043010753}}}}}}}}}},"s":{"docs":{},"e":{"docs":{},"r":{"docs":{},"v":{"docs":{},"i":{"docs":{},"c":{"docs":{"index.html":{"ref":"index.html","tf":0.008064516129032258}}}}}}}}},"e":{"docs":{},"b":{"docs":{},"i":{"docs":{"license.html":{"ref":"license.html","tf":0.010309278350515464}}}}}}},"o":{"docs":{},"l":{"docs":{},"d":{"docs":{},"e":{"docs":{},"r":{"docs":{"license.html":{"ref":"license.html","tf":0.010309278350515464}}}}}}}},"i":{"docs":{},"c":{"docs":{},"o":{"docs":{},"n":{"docs":{"index.html":{"ref":"index.html","tf":0.026881720430107527},"interfaces/Level.html":{"ref":"interfaces/Level.html","tf":0.0784313725490196}}}}},"m":{"docs":{},"p":{"docs":{},"l":{"docs":{},"e":{"docs":{},"m":{"docs":{},"e":{"docs":{},"n":{"docs":{},"t":{"docs":{"index.html":{"ref":"index.html","tf":0.002688172043010753}}}}}}},"i":{"docs":{"license.html":{"ref":"license.html","tf":0.010309278350515464}}}},"o":{"docs":{},"r":{"docs":{},"t":{"docs":{"index.html":{"ref":"index.html","tf":0.01881720430107527},"modules/GamificationModule.html":{"ref":"modules/GamificationModule.html","tf":0.018018018018018018},"injectables/BreakpointService.html":{"ref":"injectables/BreakpointService.html","tf":0.011627906976744186},"injectables/GamificationService.html":{"ref":"injectables/GamificationService.html","tf":0.011013215859030838},"injectables/MissionService.html":{"ref":"injectables/MissionService.html","tf":0.005813953488372093},"injectables/ProgressBarService.html":{"ref":"injectables/ProgressBarService.html","tf":0.005714285714285714}}}}},"r":{"docs":{},"o":{"docs":{},"v":{"docs":{"index.html":{"ref":"index.html","tf":0.002688172043010753}}}}}}},"n":{"docs":{},"d":{"docs":{},"e":{"docs":{},"x":{"docs":{"index.html":{"ref":"index.html","tf":3.333333333333333},"injectables/BreakpointService.html":{"ref":"injectables/BreakpointService.html","tf":0.011627906976744186},"injectables/GamificationService.html":{"ref":"injectables/GamificationService.html","tf":0.006607929515418502},"injectables/MissionService.html":{"ref":"injectables/MissionService.html","tf":0.005813953488372093},"injectables/ProgressBarService.html":{"ref":"injectables/ProgressBarService.html","tf":0.005714285714285714},"interfaces/Level.html":{"ref":"interfaces/Level.html","tf":0.0196078431372549}}}}},"i":{"docs":{},"t":{"docs":{},"g":{"docs":{},"a":{"docs":{},"m":{"docs":{},"e":{"docs":{},"f":{"docs":{"index.html":{"ref":"index.html","tf":0.002688172043010753}}}}}}}}},"s":{"docs":{},"t":{"docs":{},"a":{"docs":{},"l":{"docs":{"index.html":{"ref":"index.html","tf":0.002688172043010753}}},"n":{"docs":{},"c":{"docs":{"modules/GamificationModule.html":{"ref":"modules/GamificationModule.html","tf":0.036036036036036036}}}}}}},"t":{"docs":{},"e":{"docs":{},"g":{"docs":{},"r":{"docs":{"index.html":{"ref":"index.html","tf":0.002688172043010753}}}},"r":{"docs":{},"a":{"docs":{},"c":{"docs":{},"t":{"docs":{"index.html":{"ref":"index.html","tf":0.002688172043010753}}}}},"f":{"docs":{},"a":{"docs":{},"c":{"docs":{"overview.html":{"ref":"overview.html","tf":0.045454545454545456},"interfaces/Level.html":{"ref":"interfaces/Level.html","tf":5.03921568627451},"coverage.html":{"ref":"coverage.html","tf":0.02564102564102564}},"e":{"docs":{},"/":{"docs":{},"l":{"docs":{},"e":{"docs":{},"v":{"docs":{},"e":{"docs":{},"l":{"docs":{},".":{"docs":{},"i":{"docs":{},"n":{"docs":{},"t":{"docs":{},"e":{"docs":{},"r":{"docs":{},"f":{"docs":{},"a":{"docs":{},"c":{"docs":{"injectables/GamificationService.html":{"ref":"injectables/GamificationService.html","tf":0.0022026431718061676}}}}}}}}}}}}}}}}}}}}}}}},"j":{"docs":{},"e":{"docs":{},"c":{"docs":{},"t":{"docs":{"overview.html":{"ref":"overview.html","tf":0.045454545454545456},"injectables/BreakpointService.html":{"ref":"injectables/BreakpointService.html","tf":5.034883720930233},"injectables/GamificationService.html":{"ref":"injectables/GamificationService.html","tf":5.008810572687224},"injectables/MissionService.html":{"ref":"injectables/MissionService.html","tf":5.017441860465116},"injectables/ProgressBarService.html":{"ref":"injectables/ProgressBarService.html","tf":5.017142857142857},"coverage.html":{"ref":"coverage.html","tf":0.10256410256410256}}}}}},"c":{"docs":{},"l":{"docs":{},"u":{"docs":{},"d":{"docs":{"license.html":{"ref":"license.html","tf":0.030927835051546393}}}}}},"f":{"docs":{},"o":{"docs":{"modules/GamificationModule.html":{"ref":"modules/GamificationModule.html","tf":0.009009009009009009},"injectables/BreakpointService.html":{"ref":"injectables/BreakpointService.html","tf":0.011627906976744186},"injectables/GamificationService.html":{"ref":"injectables/GamificationService.html","tf":0.0022026431718061676},"injectables/MissionService.html":{"ref":"injectables/MissionService.html","tf":0.005813953488372093},"injectables/ProgressBarService.html":{"ref":"injectables/ProgressBarService.html","tf":0.005714285714285714},"interfaces/Level.html":{"ref":"interfaces/Level.html","tf":0.0196078431372549}}}}},"s":{"docs":{},"t":{"docs":{},"a":{"docs":{},"n":{"docs":{},"b":{"docs":{},"u":{"docs":{},"l":{"docs":{"index.html":{"ref":"index.html","tf":0.002688172043010753}}}}}}}},"f":{"docs":{},"u":{"docs":{},"l":{"docs":{"injectables/ProgressBarService.html":{"ref":"injectables/ProgressBarService.html","tf":0.022857142857142857}}}}}},"d":{"docs":{},"e":{"docs":{},"n":{"docs":{},"t":{"docs":{},"i":{"docs":{},"f":{"docs":{},"i":{"docs":{"coverage.html":{"ref":"coverage.html","tf":0.02564102564102564}}}}}}}}}},"k":{"docs":{},"i":{"docs":{},"n":{"docs":{},"g":{"docs":{"index.html":{"ref":"index.html","tf":0.002688172043010753}}},"d":{"docs":{"license.html":{"ref":"license.html","tf":0.010309278350515464}}}}}},"l":{"docs":{},"e":{"docs":{},"v":{"docs":{},"e":{"docs":{},"l":{"docs":{"index.html":{"ref":"index.html","tf":0.010752688172043012},"injectables/GamificationService.html":{"ref":"injectables/GamificationService.html","tf":0.05947136563876652},"interfaces/Level.html":{"ref":"interfaces/Level.html","tf":5.03921568627451},"coverage.html":{"ref":"coverage.html","tf":0.02564102564102564}},".":{"docs":{},"r":{"docs":{},"a":{"docs":{},"n":{"docs":{},"g":{"docs":{"injectables/GamificationService.html":{"ref":"injectables/GamificationService.html","tf":0.0022026431718061676}},"e":{"docs":{},".":{"docs":{},"m":{"docs":{},"i":{"docs":{},"n":{"docs":{"injectables/GamificationService.html":{"ref":"injectables/GamificationService.html","tf":0.0022026431718061676}}}}}}}}}}}}}}},"g":{"docs":{},"e":{"docs":{},"n":{"docs":{},"d":{"docs":{"overview.html":{"ref":"overview.html","tf":0.045454545454545456}}}}}}},"i":{"docs":{},"b":{"docs":{},"r":{"docs":{},"a":{"docs":{},"r":{"docs":{},"i":{"docs":{"index.html":{"ref":"index.html","tf":0.010752688172043012},"changelog.html":{"ref":"changelog.html","tf":0.05555555555555555}}}}}}},"c":{"docs":{},"e":{"docs":{},"n":{"docs":{},"s":{"docs":{"index.html":{"ref":"index.html","tf":0.002688172043010753},"license.html":{"ref":"license.html","tf":3.3436426116838485}}}}}},"v":{"docs":{},"e":{"docs":{"index.html":{"ref":"index.html","tf":0.008064516129032258}}}},"a":{"docs":{},"b":{"docs":{},"i":{"docs":{},"l":{"docs":{"license.html":{"ref":"license.html","tf":0.010309278350515464}}}},"l":{"docs":{"license.html":{"ref":"license.html","tf":0.010309278350515464}}}}},"m":{"docs":{},"i":{"docs":{},"t":{"docs":{"license.html":{"ref":"license.html","tf":0.020618556701030927}}}}},"t":{"docs":{},"e":{"docs":{},"r":{"docs":{"interfaces/Level.html":{"ref":"interfaces/Level.html","tf":0.0392156862745098}}}}}},"o":{"docs":{},"r":{"docs":{},"d":{"docs":{"index.html":{"ref":"index.html","tf":0.002688172043010753}}}},"a":{"docs":{},"d":{"docs":{"modules/GamificationModule.html":{"ref":"modules/GamificationModule.html","tf":0.009009009009009009}}}}},"a":{"docs":{},"z":{"docs":{},"i":{"docs":{"modules/GamificationModule.html":{"ref":"modules/GamificationModule.html","tf":0.009009009009009009}}}}}},"m":{"docs":{},"a":{"docs":{},"t":{"docs":{},"c":{"docs":{},"h":{"docs":{"index.html":{"ref":"index.html","tf":0.005376344086021506},"overview.html":{"ref":"overview.html","tf":0.09090909090909091},"changelog.html":{"ref":"changelog.html","tf":0.1111111111111111},"license.html":{"ref":"license.html","tf":0.020618556701030927},"modules.html":{"ref":"modules.html","tf":0.2222222222222222},"modules/GamificationModule.html":{"ref":"modules/GamificationModule.html","tf":0.018018018018018018},"injectables/BreakpointService.html":{"ref":"injectables/BreakpointService.html","tf":0.023255813953488372},"injectables/GamificationService.html":{"ref":"injectables/GamificationService.html","tf":0.004405286343612335},"injectables/MissionService.html":{"ref":"injectables/MissionService.html","tf":0.011627906976744186},"injectables/ProgressBarService.html":{"ref":"injectables/ProgressBarService.html","tf":0.011428571428571429},"interfaces/Level.html":{"ref":"interfaces/Level.html","tf":0.0392156862745098},"coverage.html":{"ref":"coverage.html","tf":0.05128205128205128}}}}},"x":{"docs":{"index.html":{"ref":"index.html","tf":0.02956989247311828},"interfaces/Level.html":{"ref":"interfaces/Level.html","tf":0.0196078431372549}},"p":{"docs":{},"o":{"docs":{},"i":{"docs":{},"n":{"docs":{},"t":{"docs":{"injectables/ProgressBarService.html":{"ref":"injectables/ProgressBarService.html","tf":0.03428571428571429}}}}}}}}},"i":{"docs":{},"n":{"docs":{"index.html":{"ref":"index.html","tf":0.026881720430107527},"interfaces/Level.html":{"ref":"interfaces/Level.html","tf":0.0196078431372549}}},"s":{"docs":{},"s":{"docs":{},"i":{"docs":{},"o":{"docs":{},"n":{"docs":{"index.html":{"ref":"index.html","tf":0.01881720430107527},"injectables/GamificationService.html":{"ref":"injectables/GamificationService.html","tf":0.011013215859030838},"injectables/MissionService.html":{"ref":"injectables/MissionService.html","tf":0.011627906976744186}},".":{"docs":{},"a":{"docs":{},"c":{"docs":{},"h":{"docs":{},"i":{"docs":{},"e":{"docs":{},"v":{"docs":{"injectables/GamificationService.html":{"ref":"injectables/GamificationService.html","tf":0.0022026431718061676}}}}}}}},"n":{"docs":{},"a":{"docs":{},"m":{"docs":{"injectables/GamificationService.html":{"ref":"injectables/GamificationService.html","tf":0.004405286343612335}}}}},"s":{"docs":{},"e":{"docs":{},"r":{"docs":{},"v":{"docs":{},"i":{"docs":{},"c":{"docs":{"injectables/GamificationService.html":{"ref":"injectables/GamificationService.html","tf":0.0022026431718061676}}}}}}},"t":{"docs":{},"a":{"docs":{},"r":{"docs":{},"t":{"docs":{"injectables/GamificationService.html":{"ref":"injectables/GamificationService.html","tf":0.0022026431718061676}}}}}}}},"s":{"docs":{},"e":{"docs":{},"r":{"docs":{},"v":{"docs":{},"i":{"docs":{},"c":{"docs":{"injectables/GamificationService.html":{"ref":"injectables/GamificationService.html","tf":0.0022026431718061676},"injectables/MissionService.html":{"ref":"injectables/MissionService.html","tf":5.011627906976744},"coverage.html":{"ref":"coverage.html","tf":0.02564102564102564}},"e":{"docs":{},"(":{"docs":{},"n":{"docs":{},"a":{"docs":{},"m":{"docs":{"injectables/GamificationService.html":{"ref":"injectables/GamificationService.html","tf":0.0022026431718061676}}}}}}}}}}}}}}}}}},"t":{"docs":{"index.html":{"ref":"index.html","tf":0.002688172043010753},"license.html":{"ref":"license.html","tf":0.010309278350515464}}}},"o":{"docs":{},"d":{"docs":{},"u":{"docs":{},"l":{"docs":{"index.html":{"ref":"index.html","tf":0.002688172043010753},"overview.html":{"ref":"overview.html","tf":0.09090909090909091},"changelog.html":{"ref":"changelog.html","tf":0.05555555555555555},"modules.html":{"ref":"modules.html","tf":10.11111111111111},"modules/GamificationModule.html":{"ref":"modules/GamificationModule.html","tf":5.036036036036036}},"e":{"docs":{},"w":{"docs":{},"i":{"docs":{},"t":{"docs":{},"h":{"docs":{},"p":{"docs":{},"r":{"docs":{},"o":{"docs":{},"v":{"docs":{},"i":{"docs":{},"d":{"docs":{"modules/GamificationModule.html":{"ref":"modules/GamificationModule.html","tf":0.02702702702702703}}}}}}}}}}}}}}},"i":{"docs":{},"f":{"docs":{},"i":{"docs":{"license.html":{"ref":"license.html","tf":0.010309278350515464}}}}}}},"e":{"docs":{},"r":{"docs":{},"c":{"docs":{},"h":{"docs":{},"a":{"docs":{},"n":{"docs":{},"t":{"docs":{"license.html":{"ref":"license.html","tf":0.010309278350515464}}}}}}},"g":{"docs":{"license.html":{"ref":"license.html","tf":0.010309278350515464}}}},"t":{"docs":{},"h":{"docs":{},"o":{"docs":{},"d":{"docs":{"modules/GamificationModule.html":{"ref":"modules/GamificationModule.html","tf":0.018018018018018018},"injectables/BreakpointService.html":{"ref":"injectables/BreakpointService.html","tf":0.023255813953488372},"injectables/GamificationService.html":{"ref":"injectables/GamificationService.html","tf":0.004405286343612335},"injectables/MissionService.html":{"ref":"injectables/MissionService.html","tf":0.011627906976744186},"injectables/ProgressBarService.html":{"ref":"injectables/ProgressBarService.html","tf":0.011428571428571429}}}}}}}},"n":{"docs":{},"a":{"docs":{},"m":{"docs":{},"e":{"docs":{"index.html":{"ref":"index.html","tf":0.010752688172043012},"injectables/BreakpointService.html":{"ref":"injectables/BreakpointService.html","tf":0.011627906976744186},"injectables/GamificationService.html":{"ref":"injectables/GamificationService.html","tf":0.030837004405286344},"injectables/MissionService.html":{"ref":"injectables/MissionService.html","tf":0.046511627906976744},"injectables/ProgressBarService.html":{"ref":"injectables/ProgressBarService.html","tf":0.017142857142857144}},".":{"docs":{},"t":{"docs":{},"r":{"docs":{},"i":{"docs":{},"m":{"docs":{"index.html":{"ref":"index.html","tf":0.002688172043010753}}}}}}}}}},"g":{"docs":{},"m":{"docs":{},"o":{"docs":{},"d":{"docs":{},"u":{"docs":{},"l":{"docs":{"index.html":{"ref":"index.html","tf":0.002688172043010753},"modules/GamificationModule.html":{"ref":"modules/GamificationModule.html","tf":0.036036036036036036}}}}}}},"o":{"docs":{},"n":{"docs":{},"i":{"docs":{},"n":{"docs":{},"i":{"docs":{},"t":{"docs":{"index.html":{"ref":"index.html","tf":0.002688172043010753}}}}}}}}},"i":{"docs":{},"c":{"docs":{},"e":{"docs":{"index.html":{"ref":"index.html","tf":0.002688172043010753}}}},"n":{"docs":{},"j":{"docs":{},"a":{"docs":{"index.html":{"ref":"index.html","tf":0.002688172043010753}}}}}},"p":{"docs":{},"m":{"docs":{"index.html":{"ref":"index.html","tf":0.005376344086021506}}}},"o":{"docs":{},"n":{"docs":{},"i":{"docs":{},"n":{"docs":{},"f":{"docs":{},"r":{"docs":{},"i":{"docs":{},"n":{"docs":{},"g":{"docs":{"license.html":{"ref":"license.html","tf":0.010309278350515464}}}}}}}}}},"t":{"docs":{},"i":{"docs":{},"c":{"docs":{"license.html":{"ref":"license.html","tf":0.020618556701030927}}}}}},"e":{"docs":{},"w":{"docs":{"modules/GamificationModule.html":{"ref":"modules/GamificationModule.html","tf":0.02702702702702703},"injectables/GamificationService.html":{"ref":"injectables/GamificationService.html","tf":0.006607929515418502},"coverage.html":{"ref":"coverage.html","tf":0.02564102564102564}}}},"u":{"docs":{},"m":{"docs":{},"b":{"docs":{},"e":{"docs":{},"r":{"docs":{"injectables/BreakpointService.html":{"ref":"injectables/BreakpointService.html","tf":0.06976744186046512},"injectables/GamificationService.html":{"ref":"injectables/GamificationService.html","tf":0.048458149779735685},"injectables/MissionService.html":{"ref":"injectables/MissionService.html","tf":0.05232558139534884},"injectables/ProgressBarService.html":{"ref":"injectables/ProgressBarService.html","tf":0.06285714285714286},"interfaces/Level.html":{"ref":"interfaces/Level.html","tf":0.0392156862745098}}}}}}}},"o":{"docs":{},"n":{"docs":{},"i":{"docs":{},"n":{"docs":{},"i":{"docs":{},"t":{"docs":{"index.html":{"ref":"index.html","tf":0.005376344086021506}}}}}}},"u":{"docs":{},"t":{"docs":{"overview.html":{"ref":"overview.html","tf":0.045454545454545456},"license.html":{"ref":"license.html","tf":0.010309278350515464}}}},"v":{"docs":{},"e":{"docs":{},"r":{"docs":{},"v":{"docs":{},"i":{"docs":{},"e":{"docs":{},"w":{"docs":{"overview.html":{"ref":"overview.html","tf":10.045454545454545}}}}}}}}},"b":{"docs":{},"t":{"docs":{},"a":{"docs":{},"i":{"docs":{},"n":{"docs":{"license.html":{"ref":"license.html","tf":0.010309278350515464}}}}}}},"t":{"docs":{},"h":{"docs":{},"e":{"docs":{},"r":{"docs":{},"w":{"docs":{},"i":{"docs":{},"s":{"docs":{"license.html":{"ref":"license.html","tf":0.010309278350515464}}}}}}}}},"p":{"docs":{},"t":{"docs":{},"i":{"docs":{},"o":{"docs":{},"n":{"docs":{"injectables/BreakpointService.html":{"ref":"injectables/BreakpointService.html","tf":0.011627906976744186},"injectables/GamificationService.html":{"ref":"injectables/GamificationService.html","tf":0.024229074889867842},"injectables/MissionService.html":{"ref":"injectables/MissionService.html","tf":0.011627906976744186},"injectables/ProgressBarService.html":{"ref":"injectables/ProgressBarService.html","tf":0.017142857142857144}}}}}}}},"p":{"docs":{},"a":{"docs":{},"r":{"docs":{},"t":{"docs":{},"n":{"docs":{},"e":{"docs":{},"r":{"docs":{"index.html":{"ref":"index.html","tf":0.002688172043010753}}}}},"i":{"docs":{},"c":{"docs":{},"u":{"docs":{},"l":{"docs":{},"a":{"docs":{},"r":{"docs":{"license.html":{"ref":"license.html","tf":0.010309278350515464}}}}}}}}},"a":{"docs":{},"m":{"docs":{},"e":{"docs":{},"t":{"docs":{"injectables/BreakpointService.html":{"ref":"injectables/BreakpointService.html","tf":0.011627906976744186},"injectables/GamificationService.html":{"ref":"injectables/GamificationService.html","tf":0.024229074889867842},"injectables/MissionService.html":{"ref":"injectables/MissionService.html","tf":0.011627906976744186},"injectables/ProgressBarService.html":{"ref":"injectables/ProgressBarService.html","tf":0.017142857142857144}}}}}}}},"o":{"docs":{},"i":{"docs":{},"n":{"docs":{},"t":{"docs":{"index.html":{"ref":"index.html","tf":0.010752688172043012},"injectables/GamificationService.html":{"ref":"injectables/GamificationService.html","tf":0.037444933920704845},"injectables/MissionService.html":{"ref":"injectables/MissionService.html","tf":0.05813953488372093},"injectables/ProgressBarService.html":{"ref":"injectables/ProgressBarService.html","tf":0.011428571428571429}},"s":{"docs":{},"t":{"docs":{},"h":{"docs":{},"r":{"docs":{},"e":{"docs":{},"s":{"docs":{},"h":{"docs":{},"o":{"docs":{},"l":{"docs":{},"d":{"docs":{"injectables/BreakpointService.html":{"ref":"injectables/BreakpointService.html","tf":0.06976744186046512}}}}}}}}}}}}}}},"w":{"docs":{},"e":{"docs":{},"r":{"docs":{"index.html":{"ref":"index.html","tf":0.002688172043010753}}}}},"r":{"docs":{},"t":{"docs":{},"i":{"docs":{},"o":{"docs":{},"n":{"docs":{"license.html":{"ref":"license.html","tf":0.010309278350515464}}}}}}}},"r":{"docs":{},"i":{"docs":{},"v":{"docs":{},"a":{"docs":{},"t":{"docs":{"index.html":{"ref":"index.html","tf":0.002688172043010753},"injectables/GamificationService.html":{"ref":"injectables/GamificationService.html","tf":0.0022026431718061676},"injectables/MissionService.html":{"ref":"injectables/MissionService.html","tf":0.03488372093023256},"injectables/ProgressBarService.html":{"ref":"injectables/ProgressBarService.html","tf":0.03428571428571429}}}}}},"o":{"docs":{},"g":{"docs":{},"r":{"docs":{},"e":{"docs":{},"s":{"docs":{},"s":{"docs":{"index.html":{"ref":"index.html","tf":0.002688172043010753},"injectables/GamificationService.html":{"ref":"injectables/GamificationService.html","tf":0.0022026431718061676}},"b":{"docs":{},"a":{"docs":{},"r":{"docs":{},"s":{"docs":{},"e":{"docs":{},"r":{"docs":{},"v":{"docs":{},"i":{"docs":{},"c":{"docs":{"injectables/GamificationService.html":{"ref":"injectables/GamificationService.html","tf":0.0022026431718061676},"injectables/ProgressBarService.html":{"ref":"injectables/ProgressBarService.html","tf":5.011428571428572},"coverage.html":{"ref":"coverage.html","tf":0.02564102564102564}},"e":{"docs":{},"(":{"docs":{},"p":{"docs":{},"o":{"docs":{},"i":{"docs":{},"n":{"docs":{},"t":{"docs":{"injectables/GamificationService.html":{"ref":"injectables/GamificationService.html","tf":0.0022026431718061676}}}}}}}}}}}}}}}}}}}}}}},"j":{"docs":{},"e":{"docs":{},"c":{"docs":{},"t":{"docs":{"index.html":{"ref":"index.html","tf":0.002688172043010753}}}}}},"v":{"docs":{},"i":{"docs":{},"d":{"docs":{"overview.html":{"ref":"overview.html","tf":0.045454545454545456},"license.html":{"ref":"license.html","tf":0.010309278350515464},"modules/GamificationModule.html":{"ref":"modules/GamificationModule.html","tf":0.0990990990990991}}}}},"p":{"docs":{},"e":{"docs":{},"r":{"docs":{},"t":{"docs":{},"i":{"docs":{"injectables/BreakpointService.html":{"ref":"injectables/BreakpointService.html","tf":0.023255813953488372},"injectables/GamificationService.html":{"ref":"injectables/GamificationService.html","tf":0.004405286343612335},"injectables/MissionService.html":{"ref":"injectables/MissionService.html","tf":0.011627906976744186},"injectables/ProgressBarService.html":{"ref":"injectables/ProgressBarService.html","tf":0.011428571428571429},"interfaces/Level.html":{"ref":"interfaces/Level.html","tf":0.0392156862745098}}}}}}}}},"u":{"docs":{},"b":{"docs":{},"l":{"docs":{},"i":{"docs":{},"c":{"docs":{"index.html":{"ref":"index.html","tf":0.008064516129032258},"modules/GamificationModule.html":{"ref":"modules/GamificationModule.html","tf":0.018018018018018018},"injectables/BreakpointService.html":{"ref":"injectables/BreakpointService.html","tf":0.10465116279069768},"injectables/GamificationService.html":{"ref":"injectables/GamificationService.html","tf":0.039647577092511016},"injectables/MissionService.html":{"ref":"injectables/MissionService.html","tf":0.0872093023255814},"injectables/ProgressBarService.html":{"ref":"injectables/ProgressBarService.html","tf":0.07428571428571429}}},"s":{"docs":{},"h":{"docs":{"license.html":{"ref":"license.html","tf":0.010309278350515464}}}}}}},"r":{"docs":{},"p":{"docs":{},"o":{"docs":{},"s":{"docs":{"license.html":{"ref":"license.html","tf":0.010309278350515464}}}}}}},"e":{"docs":{},"r":{"docs":{},"m":{"docs":{},"i":{"docs":{},"s":{"docs":{},"s":{"docs":{"license.html":{"ref":"license.html","tf":0.020618556701030927}}}},"t":{"docs":{"license.html":{"ref":"license.html","tf":0.010309278350515464}}}}},"s":{"docs":{},"o":{"docs":{},"n":{"docs":{"license.html":{"ref":"license.html","tf":0.020618556701030927}}}}}}},"i":{"docs":{},"p":{"docs":{},"e":{"docs":{"modules/GamificationModule.html":{"ref":"modules/GamificationModule.html","tf":0.02702702702702703}}}}}},"r":{"docs":{},"a":{"docs":{},"n":{"docs":{},"g":{"docs":{"index.html":{"ref":"index.html","tf":0.026881720430107527},"interfaces/Level.html":{"ref":"interfaces/Level.html","tf":0.0784313725490196}}}}},"e":{"docs":{},"p":{"docs":{},"o":{"docs":{},"r":{"docs":{},"t":{"docs":{"index.html":{"ref":"index.html","tf":0.002688172043010753}}}}}},"s":{"docs":{},"u":{"docs":{},"l":{"docs":{},"t":{"docs":{"index.html":{"ref":"index.html","tf":0.005376344086021506},"overview.html":{"ref":"overview.html","tf":0.09090909090909091},"changelog.html":{"ref":"changelog.html","tf":0.1111111111111111},"license.html":{"ref":"license.html","tf":0.020618556701030927},"modules.html":{"ref":"modules.html","tf":0.2222222222222222},"modules/GamificationModule.html":{"ref":"modules/GamificationModule.html","tf":0.018018018018018018},"injectables/BreakpointService.html":{"ref":"injectables/BreakpointService.html","tf":0.023255813953488372},"injectables/GamificationService.html":{"ref":"injectables/GamificationService.html","tf":0.004405286343612335},"injectables/MissionService.html":{"ref":"injectables/MissionService.html","tf":0.011627906976744186},"injectables/ProgressBarService.html":{"ref":"injectables/ProgressBarService.html","tf":0.011428571428571429},"interfaces/Level.html":{"ref":"interfaces/Level.html","tf":0.0392156862745098},"coverage.html":{"ref":"coverage.html","tf":0.05128205128205128}}}}},"e":{"docs":{},"t":{"docs":{"overview.html":{"ref":"overview.html","tf":0.045454545454545456}}}},"t":{"docs":{},"r":{"docs":{},"i":{"docs":{},"c":{"docs":{},"t":{"docs":{"license.html":{"ref":"license.html","tf":0.010309278350515464}}}}}}}},"t":{"docs":{},"u":{"docs":{},"r":{"docs":{},"n":{"docs":{"index.html":{"ref":"index.html","tf":0.002688172043010753},"modules/GamificationModule.html":{"ref":"modules/GamificationModule.html","tf":0.018018018018018018},"injectables/BreakpointService.html":{"ref":"injectables/BreakpointService.html","tf":0.011627906976744186},"injectables/GamificationService.html":{"ref":"injectables/GamificationService.html","tf":0.05947136563876652},"injectables/MissionService.html":{"ref":"injectables/MissionService.html","tf":0.01744186046511628},"injectables/ProgressBarService.html":{"ref":"injectables/ProgressBarService.html","tf":0.022857142857142857}}}}}},"g":{"docs":{},"i":{"docs":{},"s":{"docs":{},"t":{"docs":{"modules/GamificationModule.html":{"ref":"modules/GamificationModule.html","tf":0.018018018018018018}}}}}},"q":{"docs":{},"u":{"docs":{},"i":{"docs":{},"r":{"docs":{"modules/GamificationModule.html":{"ref":"modules/GamificationModule.html","tf":0.018018018018018018}}}}}}},"o":{"docs":{},"o":{"docs":{},"t":{"docs":{"index.html":{"ref":"index.html","tf":0.002688172043010753}}}}},"u":{"docs":{},"n":{"docs":{"index.html":{"ref":"index.html","tf":0.002688172043010753}}}},"i":{"docs":{},"g":{"docs":{},"h":{"docs":{},"t":{"docs":{"license.html":{"ref":"license.html","tf":0.010309278350515464}}}}}}},"s":{"docs":{},"a":{"docs":{},"v":{"docs":{},"e":{"docs":{},"l":{"docs":{},"o":{"docs":{},"a":{"docs":{},"d":{"docs":{"index.html":{"ref":"index.html","tf":0.002688172043010753}}}}}}}},"m":{"docs":{},"e":{"docs":{"modules/GamificationModule.html":{"ref":"modules/GamificationModule.html","tf":0.009009009009009009}}}}},"e":{"docs":{},"l":{"docs":{},"e":{"docs":{},"c":{"docs":{},"t":{"docs":{},"o":{"docs":{},"r":{"docs":{"index.html":{"ref":"index.html","tf":0.005376344086021506}}}}}}},"l":{"docs":{"license.html":{"ref":"license.html","tf":0.010309278350515464}}}},"e":{"docs":{},"k":{"docs":{"license.html":{"ref":"license.html","tf":0.010309278350515464}}}},"r":{"docs":{},"v":{"docs":{},"i":{"docs":{},"c":{"docs":{},"e":{"docs":{},"s":{"docs":{},"/":{"docs":{},"g":{"docs":{},"a":{"docs":{},"m":{"docs":{},"i":{"docs":{},"f":{"docs":{},"i":{"docs":{},"c":{"docs":{},"a":{"docs":{},"t":{"docs":{},"i":{"docs":{},"o":{"docs":{},"n":{"docs":{},".":{"docs":{},"s":{"docs":{},"e":{"docs":{},"r":{"docs":{},"v":{"docs":{},"i":{"docs":{},"c":{"docs":{"modules/GamificationModule.html":{"ref":"modules/GamificationModule.html","tf":0.009009009009009009}}}}}}}}}}}}}}}}}}}}}}}}}}}},"t":{"docs":{},"l":{"docs":{},"e":{"docs":{},"v":{"docs":{},"e":{"docs":{},"l":{"docs":{"injectables/GamificationService.html":{"ref":"injectables/GamificationService.html","tf":0.00881057268722467}},"(":{"docs":{},"l":{"docs":{},"e":{"docs":{},"v":{"docs":{},"e":{"docs":{},"l":{"docs":{"injectables/GamificationService.html":{"ref":"injectables/GamificationService.html","tf":0.004405286343612335}}}}}}}},"s":{"docs":{},"(":{"docs":{},"l":{"docs":{},"e":{"docs":{},"v":{"docs":{},"e":{"docs":{},"l":{"docs":{"injectables/GamificationService.html":{"ref":"injectables/GamificationService.html","tf":0.004405286343612335}}}}}}}}}}}}}},"p":{"docs":{},"o":{"docs":{},"i":{"docs":{},"n":{"docs":{},"t":{"docs":{"injectables/GamificationService.html":{"ref":"injectables/GamificationService.html","tf":0.004405286343612335},"injectables/MissionService.html":{"ref":"injectables/MissionService.html","tf":0.011627906976744186}},"s":{"docs":{},"(":{"docs":{},"p":{"docs":{},"o":{"docs":{},"i":{"docs":{},"n":{"docs":{},"t":{"docs":{"injectables/GamificationService.html":{"ref":"injectables/GamificationService.html","tf":0.004405286343612335},"injectables/MissionService.html":{"ref":"injectables/MissionService.html","tf":0.011627906976744186}}}}}}}}}}}}}}}},"i":{"docs":{},"m":{"docs":{},"p":{"docs":{},"l":{"docs":{"index.html":{"ref":"index.html","tf":0.002688172043010753}}}}}},"p":{"docs":{},"e":{"docs":{},"c":{"docs":{},".":{"docs":{},"b":{"docs":{},"u":{"docs":{},"n":{"docs":{},"d":{"docs":{},"l":{"docs":{},"e":{"docs":{},".":{"docs":{},"j":{"docs":{"index.html":{"ref":"index.html","tf":0.002688172043010753}}}}}}}}}}}}}},"t":{"docs":{},"a":{"docs":{},"r":{"docs":{},"t":{"docs":{"index.html":{"ref":"index.html","tf":3.344086021505376},"changelog.html":{"ref":"changelog.html","tf":3.333333333333333},"license.html":{"ref":"license.html","tf":3.333333333333333},"injectables/MissionService.html":{"ref":"injectables/MissionService.html","tf":0.023255813953488372},"injectables/ProgressBarService.html":{"ref":"injectables/ProgressBarService.html","tf":0.017142857142857144}},"e":{"docs":{},"r":{"docs":{"index.html":{"ref":"index.html","tf":0.002688172043010753}}}},"f":{"docs":{},"n":{"docs":{"injectables/GamificationService.html":{"ref":"injectables/GamificationService.html","tf":0.01762114537444934},"injectables/MissionService.html":{"ref":"injectables/MissionService.html","tf":0.046511627906976744},"injectables/ProgressBarService.html":{"ref":"injectables/ProgressBarService.html","tf":0.045714285714285714}}}}}},"t":{"docs":{},"i":{"docs":{},"c":{"docs":{"modules/GamificationModule.html":{"ref":"modules/GamificationModule.html","tf":0.018018018018018018}}}},"e":{"docs":{},"m":{"docs":{},"e":{"docs":{},"n":{"docs":{},"t":{"docs":{"coverage.html":{"ref":"coverage.html","tf":0.02564102564102564}}}}}}}}},"r":{"docs":{},"i":{"docs":{},"n":{"docs":{},"g":{"docs":{"index.html":{"ref":"index.html","tf":0.002688172043010753},"injectables/GamificationService.html":{"ref":"injectables/GamificationService.html","tf":0.013215859030837005},"injectables/MissionService.html":{"ref":"injectables/MissionService.html","tf":0.03488372093023256},"interfaces/Level.html":{"ref":"interfaces/Level.html","tf":0.11764705882352941}}}}}},"y":{"docs":{},"l":{"docs":{},"e":{"docs":{},"u":{"docs":{},"r":{"docs":{},"l":{"docs":{"index.html":{"ref":"index.html","tf":0.005376344086021506}}}}}}}}},"u":{"docs":{},"b":{"docs":{},"s":{"docs":{},"c":{"docs":{},"r":{"docs":{},"i":{"docs":{},"b":{"docs":{},"e":{"docs":{},"(":{"docs":{},"h":{"docs":{},"e":{"docs":{},"r":{"docs":{},"o":{"docs":{"index.html":{"ref":"index.html","tf":0.005376344086021506}}}}}}}}}}}},"t":{"docs":{},"a":{"docs":{},"n":{"docs":{},"t":{"docs":{},"i":{"docs":{"license.html":{"ref":"license.html","tf":0.010309278350515464}}}}}}}},"j":{"docs":{},"e":{"docs":{},"c":{"docs":{},"t":{"docs":{"license.html":{"ref":"license.html","tf":0.010309278350515464}}}}}},"l":{"docs":{},"i":{"docs":{},"c":{"docs":{},"e":{"docs":{},"n":{"docs":{},"s":{"docs":{"license.html":{"ref":"license.html","tf":0.010309278350515464}}}}}}}}}},"h":{"docs":{},"a":{"docs":{},"l":{"docs":{},"l":{"docs":{"license.html":{"ref":"license.html","tf":0.020618556701030927}}}},"r":{"docs":{},"e":{"docs":{"modules/GamificationModule.html":{"ref":"modules/GamificationModule.html","tf":0.009009009009009009}}}}}},"o":{"docs":{},"f":{"docs":{},"t":{"docs":{},"w":{"docs":{},"a":{"docs":{},"r":{"docs":{"license.html":{"ref":"license.html","tf":0.09278350515463918}}}}}}},"u":{"docs":{},"r":{"docs":{},"c":{"docs":{"modules/GamificationModule.html":{"ref":"modules/GamificationModule.html","tf":0.009009009009009009},"injectables/BreakpointService.html":{"ref":"injectables/BreakpointService.html","tf":0.011627906976744186},"injectables/GamificationService.html":{"ref":"injectables/GamificationService.html","tf":0.0022026431718061676},"injectables/MissionService.html":{"ref":"injectables/MissionService.html","tf":0.005813953488372093},"injectables/ProgressBarService.html":{"ref":"injectables/ProgressBarService.html","tf":0.005714285714285714},"interfaces/Level.html":{"ref":"interfaces/Level.html","tf":0.0196078431372549}}}}}},"r":{"docs":{},"c":{"docs":{},"/":{"docs":{},"m":{"docs":{},"o":{"docs":{},"d":{"docs":{},"u":{"docs":{},"l":{"docs":{},"e":{"docs":{},"s":{"docs":{},"/":{"docs":{},"g":{"docs":{},"a":{"docs":{},"m":{"docs":{},"i":{"docs":{},"f":{"docs":{},"i":{"docs":{},"c":{"docs":{},"a":{"docs":{},"t":{"docs":{},"i":{"docs":{},"o":{"docs":{},"n":{"docs":{},".":{"docs":{},"m":{"docs":{},"o":{"docs":{},"d":{"docs":{},"u":{"docs":{},"l":{"docs":{},"e":{"docs":{},".":{"docs":{},"t":{"docs":{"modules/GamificationModule.html":{"ref":"modules/GamificationModule.html","tf":0.009009009009009009}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"s":{"docs":{},"e":{"docs":{},"r":{"docs":{},"v":{"docs":{},"i":{"docs":{},"c":{"docs":{},"e":{"docs":{},"s":{"docs":{},"/":{"docs":{},"b":{"docs":{},"r":{"docs":{},"e":{"docs":{},"a":{"docs":{},"k":{"docs":{},"p":{"docs":{},"o":{"docs":{},"i":{"docs":{},"n":{"docs":{},"t":{"docs":{},".":{"docs":{},"s":{"docs":{},"e":{"docs":{},"r":{"docs":{},"v":{"docs":{},"i":{"docs":{},"c":{"docs":{},"e":{"docs":{},".":{"docs":{},"t":{"docs":{"injectables/BreakpointService.html":{"ref":"injectables/BreakpointService.html","tf":0.011627906976744186},"coverage.html":{"ref":"coverage.html","tf":0.02564102564102564}},"s":{"docs":{},":":{"1":{"2":{"docs":{"injectables/BreakpointService.html":{"ref":"injectables/BreakpointService.html","tf":0.011627906976744186}}},"docs":{}},"5":{"docs":{"injectables/BreakpointService.html":{"ref":"injectables/BreakpointService.html","tf":0.011627906976744186}}},"6":{"docs":{"injectables/BreakpointService.html":{"ref":"injectables/BreakpointService.html","tf":0.023255813953488372}}},"docs":{}}}}}}}}}}}}}}}}}}}}}}},"g":{"docs":{},"a":{"docs":{},"m":{"docs":{},"i":{"docs":{},"f":{"docs":{},"i":{"docs":{},"c":{"docs":{},"a":{"docs":{},"t":{"docs":{},"i":{"docs":{},"o":{"docs":{},"n":{"docs":{},".":{"docs":{},"s":{"docs":{},"e":{"docs":{},"r":{"docs":{},"v":{"docs":{},"i":{"docs":{},"c":{"docs":{},"e":{"docs":{},".":{"docs":{},"t":{"docs":{"injectables/GamificationService.html":{"ref":"injectables/GamificationService.html","tf":0.0022026431718061676},"coverage.html":{"ref":"coverage.html","tf":0.02564102564102564}},"s":{"docs":{},":":{"1":{"0":{"docs":{"injectables/GamificationService.html":{"ref":"injectables/GamificationService.html","tf":0.0022026431718061676}}},"1":{"docs":{"injectables/GamificationService.html":{"ref":"injectables/GamificationService.html","tf":0.0022026431718061676}}},"2":{"docs":{"injectables/GamificationService.html":{"ref":"injectables/GamificationService.html","tf":0.0022026431718061676}}},"3":{"docs":{"injectables/GamificationService.html":{"ref":"injectables/GamificationService.html","tf":0.0022026431718061676}}},"4":{"docs":{"injectables/GamificationService.html":{"ref":"injectables/GamificationService.html","tf":0.004405286343612335}}},"docs":{}},"2":{"3":{"docs":{"injectables/GamificationService.html":{"ref":"injectables/GamificationService.html","tf":0.0022026431718061676}}},"9":{"docs":{"injectables/GamificationService.html":{"ref":"injectables/GamificationService.html","tf":0.0022026431718061676}}},"docs":{}},"3":{"2":{"docs":{"injectables/GamificationService.html":{"ref":"injectables/GamificationService.html","tf":0.0022026431718061676}}},"8":{"docs":{"injectables/GamificationService.html":{"ref":"injectables/GamificationService.html","tf":0.0022026431718061676}}},"docs":{}},"4":{"1":{"docs":{"injectables/GamificationService.html":{"ref":"injectables/GamificationService.html","tf":0.0022026431718061676}}},"5":{"docs":{"injectables/GamificationService.html":{"ref":"injectables/GamificationService.html","tf":0.0022026431718061676}}},"8":{"docs":{"injectables/GamificationService.html":{"ref":"injectables/GamificationService.html","tf":0.0022026431718061676}}},"docs":{}},"5":{"9":{"docs":{"injectables/GamificationService.html":{"ref":"injectables/GamificationService.html","tf":0.0022026431718061676}}},"docs":{}},"6":{"2":{"docs":{"injectables/GamificationService.html":{"ref":"injectables/GamificationService.html","tf":0.0022026431718061676}}},"5":{"docs":{"injectables/GamificationService.html":{"ref":"injectables/GamificationService.html","tf":0.0022026431718061676}}},"8":{"docs":{"injectables/GamificationService.html":{"ref":"injectables/GamificationService.html","tf":0.0022026431718061676}}},"docs":{}},"7":{"1":{"docs":{"injectables/GamificationService.html":{"ref":"injectables/GamificationService.html","tf":0.0022026431718061676}}},"4":{"docs":{"injectables/GamificationService.html":{"ref":"injectables/GamificationService.html","tf":0.0022026431718061676}}},"7":{"docs":{"injectables/GamificationService.html":{"ref":"injectables/GamificationService.html","tf":0.0022026431718061676}}},"docs":{}},"8":{"0":{"docs":{"injectables/GamificationService.html":{"ref":"injectables/GamificationService.html","tf":0.0022026431718061676}}},"7":{"docs":{"injectables/GamificationService.html":{"ref":"injectables/GamificationService.html","tf":0.0022026431718061676}}},"docs":{}},"9":{"docs":{"injectables/GamificationService.html":{"ref":"injectables/GamificationService.html","tf":0.0022026431718061676}}},"docs":{}}}}}}}}}}}}}}}}}}}}}}}}},"m":{"docs":{},"i":{"docs":{},"s":{"docs":{},"s":{"docs":{},"i":{"docs":{},"o":{"docs":{},"n":{"docs":{},".":{"docs":{},"s":{"docs":{},"e":{"docs":{},"r":{"docs":{},"v":{"docs":{},"i":{"docs":{},"c":{"docs":{},"e":{"docs":{},".":{"docs":{},"t":{"docs":{"injectables/MissionService.html":{"ref":"injectables/MissionService.html","tf":0.005813953488372093},"coverage.html":{"ref":"coverage.html","tf":0.02564102564102564}},"s":{"docs":{},":":{"1":{"6":{"docs":{"injectables/MissionService.html":{"ref":"injectables/MissionService.html","tf":0.005813953488372093}}},"9":{"docs":{"injectables/MissionService.html":{"ref":"injectables/MissionService.html","tf":0.005813953488372093}}},"docs":{}},"2":{"2":{"docs":{"injectables/MissionService.html":{"ref":"injectables/MissionService.html","tf":0.005813953488372093}}},"docs":{}},"5":{"docs":{"injectables/MissionService.html":{"ref":"injectables/MissionService.html","tf":0.005813953488372093}}},"6":{"docs":{"injectables/MissionService.html":{"ref":"injectables/MissionService.html","tf":0.005813953488372093}}},"7":{"docs":{"injectables/MissionService.html":{"ref":"injectables/MissionService.html","tf":0.005813953488372093}}},"8":{"docs":{"injectables/MissionService.html":{"ref":"injectables/MissionService.html","tf":0.011627906976744186}}},"docs":{}}}}}}}}}}}}}}}}}}}},"p":{"docs":{},"r":{"docs":{},"o":{"docs":{},"g":{"docs":{},"r":{"docs":{},"e":{"docs":{},"s":{"docs":{},"s":{"docs":{"injectables/ProgressBarService.html":{"ref":"injectables/ProgressBarService.html","tf":0.05142857142857143},"coverage.html":{"ref":"coverage.html","tf":0.02564102564102564}}}}}}}}}}}}}}}}}}},"i":{"docs":{},"n":{"docs":{},"t":{"docs":{},"e":{"docs":{},"r":{"docs":{},"f":{"docs":{},"a":{"docs":{},"c":{"docs":{},"e":{"docs":{},"/":{"docs":{},"l":{"docs":{},"e":{"docs":{},"v":{"docs":{},"e":{"docs":{},"l":{"docs":{},".":{"docs":{},"i":{"docs":{},"n":{"docs":{},"t":{"docs":{},"e":{"docs":{},"r":{"docs":{},"f":{"docs":{},"a":{"docs":{},"c":{"docs":{},"e":{"docs":{},".":{"docs":{},"t":{"docs":{"interfaces/Level.html":{"ref":"interfaces/Level.html","tf":0.0196078431372549},"coverage.html":{"ref":"coverage.html","tf":0.02564102564102564}},"s":{"docs":{},":":{"2":{"docs":{"interfaces/Level.html":{"ref":"interfaces/Level.html","tf":0.0196078431372549}}},"3":{"docs":{"interfaces/Level.html":{"ref":"interfaces/Level.html","tf":0.0196078431372549}}},"4":{"docs":{"interfaces/Level.html":{"ref":"interfaces/Level.html","tf":0.0196078431372549}}},"docs":{}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"t":{"docs":{},"e":{"docs":{},"m":{"docs":{},"p":{"docs":{},"l":{"docs":{},"a":{"docs":{},"t":{"docs":{},"e":{"docs":{},"u":{"docs":{},"r":{"docs":{},"l":{"docs":{"index.html":{"ref":"index.html","tf":0.005376344086021506}}}}}}}}}}},"s":{"docs":{},"t":{"docs":{"index.html":{"ref":"index.html","tf":0.010752688172043012}},"i":{"docs":{},"t":{"docs":{"index.html":{"ref":"index.html","tf":0.002688172043010753}}}}}}},"h":{"docs":{},"i":{"docs":{},"s":{"docs":{},".":{"docs":{},"g":{"docs":{},"a":{"docs":{},"m":{"docs":{},"i":{"docs":{},"f":{"docs":{"index.html":{"ref":"index.html","tf":0.002688172043010753}},"i":{"docs":{},"c":{"docs":{},"a":{"docs":{},"t":{"docs":{},"i":{"docs":{},"o":{"docs":{},"n":{"docs":{},".":{"docs":{},"a":{"docs":{},"c":{"docs":{},"h":{"docs":{},"i":{"docs":{},"e":{"docs":{},"v":{"docs":{},"e":{"docs":{},"m":{"docs":{},"i":{"docs":{},"s":{"docs":{},"s":{"docs":{},"i":{"docs":{},"o":{"docs":{},"n":{"docs":{},"(":{"docs":{},"'":{"docs":{},"a":{"docs":{},"d":{"docs":{},"d":{"docs":{"index.html":{"ref":"index.html","tf":0.002688172043010753}}}}},"d":{"docs":{},"e":{"docs":{},"l":{"docs":{},"e":{"docs":{},"t":{"docs":{"index.html":{"ref":"index.html","tf":0.002688172043010753}}}}}}}}}}}}}}}}}}}}}},"d":{"docs":{},"d":{"docs":{},"b":{"docs":{},"r":{"docs":{},"e":{"docs":{},"a":{"docs":{},"k":{"docs":{},"p":{"docs":{},"o":{"docs":{},"i":{"docs":{},"n":{"docs":{},"t":{"docs":{},"(":{"1":{"0":{"0":{"docs":{"index.html":{"ref":"index.html","tf":0.002688172043010753}}},"docs":{}},"docs":{}},"2":{"0":{"0":{"docs":{"index.html":{"ref":"index.html","tf":0.002688172043010753}}},"docs":{}},"docs":{}},"3":{"0":{"0":{"docs":{"index.html":{"ref":"index.html","tf":0.005376344086021506}}},"docs":{}},"docs":{}},"docs":{}}}}}}}}}}}},"c":{"docs":{},"o":{"docs":{},"m":{"docs":{},"p":{"docs":{},"o":{"docs":{},"n":{"docs":{},"e":{"docs":{},"n":{"docs":{},"t":{"docs":{},"(":{"4":{"0":{"0":{"docs":{"index.html":{"ref":"index.html","tf":0.002688172043010753}}},"docs":{}},"docs":{}},"docs":{}}}}}}}}}}},"m":{"docs":{},"i":{"docs":{},"s":{"docs":{},"s":{"docs":{},"i":{"docs":{},"o":{"docs":{},"n":{"docs":{},"(":{"docs":{},"'":{"docs":{},"a":{"docs":{},"d":{"docs":{},"d":{"docs":{"index.html":{"ref":"index.html","tf":0.002688172043010753}}}}},"d":{"docs":{},"e":{"docs":{},"l":{"docs":{},"e":{"docs":{},"t":{"docs":{"index.html":{"ref":"index.html","tf":0.002688172043010753}}}}}}},"s":{"docs":{},"a":{"docs":{},"v":{"docs":{"index.html":{"ref":"index.html","tf":0.002688172043010753}}}}}}}}}}}}}}}}},"g":{"docs":{},"e":{"docs":{},"t":{"docs":{},"l":{"docs":{},"e":{"docs":{},"v":{"docs":{},"e":{"docs":{},"l":{"docs":{"index.html":{"ref":"index.html","tf":0.005376344086021506}},"b":{"docs":{},"y":{"docs":{},"p":{"docs":{},"o":{"docs":{},"i":{"docs":{},"n":{"docs":{},"t":{"docs":{},"s":{"docs":{},"(":{"docs":{},"p":{"docs":{},"o":{"docs":{},"i":{"docs":{},"n":{"docs":{},"t":{"docs":{"index.html":{"ref":"index.html","tf":0.002688172043010753}}}}}}}}}}}}}}}}}}}}},"p":{"docs":{},"o":{"docs":{},"i":{"docs":{},"n":{"docs":{},"t":{"docs":{"index.html":{"ref":"index.html","tf":0.021505376344086023}}}}}}}}}}}}}}}}}}}}}},"e":{"docs":{},"t":{"docs":{},"h":{"docs":{},"e":{"docs":{},"r":{"docs":{},"o":{"docs":{"index.html":{"ref":"index.html","tf":0.002688172043010753}}}}}},"l":{"docs":{},"e":{"docs":{},"v":{"docs":{},"e":{"docs":{},"l":{"docs":{},"s":{"docs":{},"(":{"docs":{},")":{"docs":{},".":{"docs":{},"f":{"docs":{},"i":{"docs":{},"l":{"docs":{},"t":{"docs":{},"e":{"docs":{},"r":{"docs":{},"(":{"docs":{},"l":{"docs":{},"e":{"docs":{},"v":{"docs":{},"e":{"docs":{},"l":{"docs":{"injectables/GamificationService.html":{"ref":"injectables/GamificationService.html","tf":0.0022026431718061676}}}}}}}}}}}}}}}}}}}}}}}}}},"h":{"docs":{},"e":{"docs":{},"r":{"docs":{},"o":{"docs":{"index.html":{"ref":"index.html","tf":0.005376344086021506}},"e":{"docs":{},"s":{"docs":{},".":{"docs":{},"f":{"docs":{},"i":{"docs":{},"l":{"docs":{},"t":{"docs":{},"e":{"docs":{},"r":{"docs":{},"(":{"docs":{},"h":{"docs":{"index.html":{"ref":"index.html","tf":0.002688172043010753}}}}}}}}}},"p":{"docs":{},"u":{"docs":{},"s":{"docs":{},"h":{"docs":{},"(":{"docs":{},"h":{"docs":{},"e":{"docs":{},"r":{"docs":{},"o":{"docs":{"index.html":{"ref":"index.html","tf":0.002688172043010753}}}}}}}}}}}}}},"s":{"docs":{},"e":{"docs":{},"r":{"docs":{},"v":{"docs":{},"i":{"docs":{},"c":{"docs":{},"e":{"docs":{},".":{"docs":{},"a":{"docs":{},"d":{"docs":{},"d":{"docs":{},"h":{"docs":{},"e":{"docs":{},"r":{"docs":{},"o":{"docs":{"index.html":{"ref":"index.html","tf":0.002688172043010753}}}}}}}}},"d":{"docs":{},"e":{"docs":{},"l":{"docs":{},"e":{"docs":{},"t":{"docs":{},"e":{"docs":{},"h":{"docs":{},"e":{"docs":{},"r":{"docs":{},"o":{"docs":{},"(":{"docs":{},"h":{"docs":{},"e":{"docs":{},"r":{"docs":{},"o":{"docs":{},")":{"docs":{},".":{"docs":{},"s":{"docs":{},"u":{"docs":{},"b":{"docs":{},"s":{"docs":{},"c":{"docs":{},"r":{"docs":{},"i":{"docs":{},"b":{"docs":{"index.html":{"ref":"index.html","tf":0.002688172043010753}}}}}}}}}}}}}}}}}}}}}}}}}}},"g":{"docs":{},"e":{"docs":{},"t":{"docs":{},"h":{"docs":{},"e":{"docs":{},"r":{"docs":{},"o":{"docs":{"index.html":{"ref":"index.html","tf":0.002688172043010753}}}}}}}}}}}}}}}}}}}}},"i":{"docs":{},"n":{"docs":{},"i":{"docs":{},"t":{"docs":{},"g":{"docs":{},"a":{"docs":{},"m":{"docs":{},"e":{"docs":{},"f":{"docs":{"index.html":{"ref":"index.html","tf":0.002688172043010753}}}}}}}}}},"s":{"docs":{},"f":{"docs":{},"u":{"docs":{},"l":{"docs":{"injectables/ProgressBarService.html":{"ref":"injectables/ProgressBarService.html","tf":0.011428571428571429}}}}}}},"p":{"docs":{},"r":{"docs":{},"o":{"docs":{},"g":{"docs":{},"r":{"docs":{},"e":{"docs":{},"s":{"docs":{},"s":{"docs":{"index.html":{"ref":"index.html","tf":0.002688172043010753}},".":{"docs":{},"m":{"docs":{},"a":{"docs":{},"x":{"docs":{"index.html":{"ref":"index.html","tf":0.002688172043010753}}}}},"v":{"docs":{},"a":{"docs":{},"l":{"docs":{},"u":{"docs":{"index.html":{"ref":"index.html","tf":0.002688172043010753}}}}}}}}}}}}}},"o":{"docs":{},"i":{"docs":{},"n":{"docs":{},"t":{"docs":{"injectables/GamificationService.html":{"ref":"injectables/GamificationService.html","tf":0.013215859030837005},"injectables/MissionService.html":{"ref":"injectables/MissionService.html","tf":0.011627906976744186}},"s":{"docs":{},"t":{"docs":{},"h":{"docs":{},"r":{"docs":{},"e":{"docs":{},"s":{"docs":{},"h":{"docs":{},"o":{"docs":{},"l":{"docs":{},"d":{"docs":{"injectables/BreakpointService.html":{"ref":"injectables/BreakpointService.html","tf":0.011627906976744186}}}}}}}}}}}}}}}}},"u":{"docs":{},"s":{"docs":{"index.html":{"ref":"index.html","tf":0.002688172043010753}},"e":{"docs":{},"r":{"docs":{},".":{"docs":{},"l":{"docs":{},"e":{"docs":{},"v":{"docs":{},"e":{"docs":{},"l":{"docs":{"index.html":{"ref":"index.html","tf":0.005376344086021506}}}}}}},"p":{"docs":{},"o":{"docs":{},"i":{"docs":{},"n":{"docs":{},"t":{"docs":{"index.html":{"ref":"index.html","tf":0.002688172043010753}}}}}}}}}}},"p":{"docs":{},"d":{"docs":{},"a":{"docs":{},"t":{"docs":{},"e":{"docs":{},"f":{"docs":{},"n":{"docs":{"injectables/ProgressBarService.html":{"ref":"injectables/ProgressBarService.html","tf":0.017142857142857144}}}}}}}}}},"a":{"docs":{},"c":{"docs":{},"t":{"docs":{},"i":{"docs":{},"o":{"docs":{},"n":{"docs":{},"f":{"docs":{},"u":{"docs":{},"n":{"docs":{},"c":{"docs":{"injectables/BreakpointService.html":{"ref":"injectables/BreakpointService.html","tf":0.03488372093023256}}}}}}}}}},"h":{"docs":{},"i":{"docs":{},"e":{"docs":{},"v":{"docs":{},"e":{"docs":{},"f":{"docs":{},"n":{"docs":{"injectables/MissionService.html":{"ref":"injectables/MissionService.html","tf":0.01744186046511628}}}}}}}}}},"d":{"docs":{},"d":{"docs":{},"p":{"docs":{},"o":{"docs":{},"i":{"docs":{},"n":{"docs":{},"t":{"docs":{},"s":{"docs":{},"(":{"docs":{},"m":{"docs":{},"i":{"docs":{},"s":{"docs":{},"s":{"docs":{},"i":{"docs":{},"o":{"docs":{},"n":{"docs":{},".":{"docs":{},"p":{"docs":{},"o":{"docs":{},"i":{"docs":{},"n":{"docs":{},"t":{"docs":{"injectables/GamificationService.html":{"ref":"injectables/GamificationService.html","tf":0.0022026431718061676}}}}}}}}}}}}}}}}}}}}}}}}},"b":{"docs":{},"r":{"docs":{},"e":{"docs":{},"a":{"docs":{},"k":{"docs":{},"p":{"docs":{},"o":{"docs":{},"i":{"docs":{},"n":{"docs":{},"t":{"docs":{"injectables/GamificationService.html":{"ref":"injectables/GamificationService.html","tf":0.0022026431718061676}},"s":{"docs":{},".":{"docs":{},"f":{"docs":{},"o":{"docs":{},"r":{"docs":{},"e":{"docs":{},"a":{"docs":{},"c":{"docs":{},"h":{"docs":{},"(":{"docs":{},"(":{"docs":{},"b":{"docs":{},"r":{"docs":{},"e":{"docs":{},"a":{"docs":{},"k":{"docs":{},"p":{"docs":{},"o":{"docs":{},"i":{"docs":{},"n":{"docs":{},"t":{"docs":{"injectables/GamificationService.html":{"ref":"injectables/GamificationService.html","tf":0.0022026431718061676}}}}}}}}}}}}}}}}}}}}},"p":{"docs":{},"u":{"docs":{},"s":{"docs":{},"h":{"docs":{},"(":{"docs":{},"b":{"docs":{},"r":{"docs":{},"e":{"docs":{},"a":{"docs":{},"k":{"docs":{},"p":{"docs":{},"o":{"docs":{},"i":{"docs":{},"n":{"docs":{},"t":{"docs":{"injectables/GamificationService.html":{"ref":"injectables/GamificationService.html","tf":0.0022026431718061676}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"c":{"docs":{},"o":{"docs":{},"m":{"docs":{},"p":{"docs":{},"o":{"docs":{},"n":{"docs":{"injectables/GamificationService.html":{"ref":"injectables/GamificationService.html","tf":0.0022026431718061676}},"e":{"docs":{},"n":{"docs":{},"t":{"docs":{},"s":{"docs":{},".":{"docs":{},"p":{"docs":{},"u":{"docs":{},"s":{"docs":{},"h":{"docs":{},"(":{"docs":{},"c":{"docs":{},"o":{"docs":{},"m":{"docs":{},"p":{"docs":{},"o":{"docs":{},"n":{"docs":{"injectables/GamificationService.html":{"ref":"injectables/GamificationService.html","tf":0.0022026431718061676}}}}}}}}}}}}}},"[":{"docs":{},"i":{"docs":{},"n":{"docs":{},"d":{"docs":{},"e":{"docs":{},"x":{"docs":{},"]":{"docs":{},".":{"docs":{},"u":{"docs":{},"p":{"docs":{},"d":{"docs":{},"a":{"docs":{},"t":{"docs":{},"e":{"docs":{},"(":{"docs":{},"p":{"docs":{},"o":{"docs":{},"i":{"docs":{},"n":{"docs":{},"t":{"docs":{"injectables/GamificationService.html":{"ref":"injectables/GamificationService.html","tf":0.0022026431718061676}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"l":{"docs":{},"e":{"docs":{},"v":{"docs":{},"e":{"docs":{},"l":{"docs":{"injectables/GamificationService.html":{"ref":"injectables/GamificationService.html","tf":0.019823788546255508}},"s":{"docs":{},".":{"docs":{},"p":{"docs":{},"u":{"docs":{},"s":{"docs":{},"h":{"docs":{},"(":{"docs":{},"l":{"docs":{},"e":{"docs":{},"v":{"docs":{},"e":{"docs":{},"l":{"docs":{"injectables/GamificationService.html":{"ref":"injectables/GamificationService.html","tf":0.0022026431718061676}}}}}}}}}}}}},"[":{"0":{"docs":{"injectables/GamificationService.html":{"ref":"injectables/GamificationService.html","tf":0.004405286343612335}}},"docs":{}}}}}}}},"m":{"docs":{},"i":{"docs":{},"s":{"docs":{},"s":{"docs":{"injectables/GamificationService.html":{"ref":"injectables/GamificationService.html","tf":0.0022026431718061676}},"i":{"docs":{},"o":{"docs":{},"n":{"docs":{},"s":{"docs":{},".":{"docs":{},"m":{"docs":{},"a":{"docs":{},"p":{"docs":{},"(":{"docs":{},"(":{"docs":{},"m":{"docs":{},"i":{"docs":{},"s":{"docs":{},"s":{"docs":{"injectables/GamificationService.html":{"ref":"injectables/GamificationService.html","tf":0.0022026431718061676}}}}}}}}}}},"p":{"docs":{},"u":{"docs":{},"s":{"docs":{},"h":{"docs":{},"(":{"docs":{},"m":{"docs":{},"i":{"docs":{},"s":{"docs":{},"s":{"docs":{"injectables/GamificationService.html":{"ref":"injectables/GamificationService.html","tf":0.0022026431718061676}}}}}}}}}}}}}}}}}}},"a":{"docs":{},"x":{"docs":{},"p":{"docs":{},"o":{"docs":{},"i":{"docs":{},"n":{"docs":{},"t":{"docs":{"injectables/ProgressBarService.html":{"ref":"injectables/ProgressBarService.html","tf":0.017142857142857144}}}}}}}}}},"s":{"docs":{},"e":{"docs":{},"t":{"docs":{},"l":{"docs":{},"e":{"docs":{},"v":{"docs":{},"e":{"docs":{},"l":{"docs":{},")":{"docs":{},"[":{"0":{"docs":{"injectables/GamificationService.html":{"ref":"injectables/GamificationService.html","tf":0.0022026431718061676}}},"docs":{}}}}}}}}}},"t":{"docs":{},"a":{"docs":{},"r":{"docs":{},"t":{"docs":{},"f":{"docs":{},"n":{"docs":{"injectables/MissionService.html":{"ref":"injectables/MissionService.html","tf":0.01744186046511628},"injectables/ProgressBarService.html":{"ref":"injectables/ProgressBarService.html","tf":0.011428571428571429}}}}}}}}},"n":{"docs":{},"a":{"docs":{},"m":{"docs":{"injectables/MissionService.html":{"ref":"injectables/MissionService.html","tf":0.005813953488372093}}}}}}}}},"i":{"docs":{},"t":{"docs":{},"l":{"docs":{"index.html":{"ref":"index.html","tf":0.002688172043010753}}}}},"o":{"docs":{},"u":{"docs":{},"r":{"docs":{"index.html":{"ref":"index.html","tf":0.002688172043010753}}}},"r":{"docs":{},"t":{"docs":{"license.html":{"ref":"license.html","tf":0.010309278350515464}}}}},"y":{"docs":{},"p":{"docs":{},"e":{"docs":{"injectables/BreakpointService.html":{"ref":"injectables/BreakpointService.html","tf":0.03488372093023256},"injectables/GamificationService.html":{"ref":"injectables/GamificationService.html","tf":0.030837004405286344},"injectables/MissionService.html":{"ref":"injectables/MissionService.html","tf":0.03488372093023256},"injectables/ProgressBarService.html":{"ref":"injectables/ProgressBarService.html","tf":0.04},"interfaces/Level.html":{"ref":"interfaces/Level.html","tf":0.09803921568627451},"coverage.html":{"ref":"coverage.html","tf":0.02564102564102564}},"s":{"docs":{},"c":{"docs":{},"r":{"docs":{},"i":{"docs":{},"p":{"docs":{},"t":{"docs":{"index.html":{"ref":"index.html","tf":0.002688172043010753}}}}}}}}}}},"r":{"docs":{},"u":{"docs":{},"e":{"docs":{"injectables/BreakpointService.html":{"ref":"injectables/BreakpointService.html","tf":0.011627906976744186},"injectables/GamificationService.html":{"ref":"injectables/GamificationService.html","tf":0.011013215859030838},"injectables/MissionService.html":{"ref":"injectables/MissionService.html","tf":0.011627906976744186},"injectables/ProgressBarService.html":{"ref":"injectables/ProgressBarService.html","tf":0.011428571428571429}}}}},"a":{"docs":{},"b":{"docs":{},"l":{"docs":{"coverage.html":{"ref":"coverage.html","tf":0.02564102564102564}},"e":{"docs":{},"s":{"docs":{},"o":{"docs":{},"r":{"docs":{},"t":{"docs":{},"(":{"docs":{},"d":{"docs":{},"o":{"docs":{},"c":{"docs":{},"u":{"docs":{},"m":{"docs":{},"e":{"docs":{},"n":{"docs":{},"t":{"docs":{},".":{"docs":{},"g":{"docs":{},"e":{"docs":{},"t":{"docs":{},"e":{"docs":{},"l":{"docs":{},"e":{"docs":{},"m":{"docs":{},"e":{"docs":{},"n":{"docs":{},"t":{"docs":{},"b":{"docs":{},"y":{"docs":{},"i":{"docs":{},"d":{"docs":{},"(":{"docs":{},"'":{"docs":{},"c":{"docs":{},"o":{"docs":{},"v":{"docs":{},"e":{"docs":{},"r":{"docs":{},"a":{"docs":{},"g":{"docs":{"coverage.html":{"ref":"coverage.html","tf":0.02564102564102564}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"u":{"docs":{},"n":{"docs":{},"i":{"docs":{},"t":{"docs":{"index.html":{"ref":"index.html","tf":0.002688172043010753}}}}},"p":{"docs":{},"d":{"docs":{},"a":{"docs":{},"t":{"docs":{"index.html":{"ref":"index.html","tf":0.002688172043010753},"injectables/ProgressBarService.html":{"ref":"injectables/ProgressBarService.html","tf":0.011428571428571429}},"e":{"docs":{},"f":{"docs":{},"n":{"docs":{"injectables/GamificationService.html":{"ref":"injectables/GamificationService.html","tf":0.00881057268722467},"injectables/ProgressBarService.html":{"ref":"injectables/ProgressBarService.html","tf":0.045714285714285714}}}},"(":{"docs":{},"p":{"docs":{},"o":{"docs":{},"i":{"docs":{},"n":{"docs":{},"t":{"docs":{"injectables/ProgressBarService.html":{"ref":"injectables/ProgressBarService.html","tf":0.011428571428571429}}}}}}}}}}}}},"s":{"docs":{"index.html":{"ref":"index.html","tf":0.01881720430107527},"license.html":{"ref":"license.html","tf":0.020618556701030927},"modules/GamificationModule.html":{"ref":"modules/GamificationModule.html","tf":0.036036036036036036}},"e":{"docs":{},"r":{"docs":{"index.html":{"ref":"index.html","tf":0.005376344086021506}}},"c":{"docs":{},"l":{"docs":{},"a":{"docs":{},"s":{"docs":{},"s":{"docs":{"modules/GamificationModule.html":{"ref":"modules/GamificationModule.html","tf":0.018018018018018018}}}}}}},"v":{"docs":{},"a":{"docs":{},"l":{"docs":{},"u":{"docs":{"modules/GamificationModule.html":{"ref":"modules/GamificationModule.html","tf":0.036036036036036036}}}}}}},"u":{"docs":{},"a":{"docs":{},"l":{"docs":{"index.html":{"ref":"index.html","tf":0.002688172043010753}}}}}}},"v":{"5":{"docs":{"index.html":{"ref":"index.html","tf":0.002688172043010753}}},"docs":{},"a":{"docs":{},"l":{"docs":{},"u":{"docs":{"index.html":{"ref":"index.html","tf":0.002688172043010753},"injectables/GamificationService.html":{"ref":"injectables/GamificationService.html","tf":0.0022026431718061676},"injectables/MissionService.html":{"ref":"injectables/MissionService.html","tf":0.011627906976744186},"injectables/ProgressBarService.html":{"ref":"injectables/ProgressBarService.html","tf":0.005714285714285714}}}}},"i":{"docs":{},"p":{"docs":{"index.html":{"ref":"index.html","tf":0.002688172043010753}}}},"o":{"docs":{},"i":{"docs":{},"d":{"docs":{"index.html":{"ref":"index.html","tf":0.008064516129032258},"injectables/BreakpointService.html":{"ref":"injectables/BreakpointService.html","tf":0.011627906976744186},"injectables/GamificationService.html":{"ref":"injectables/GamificationService.html","tf":0.013215859030837005},"injectables/MissionService.html":{"ref":"injectables/MissionService.html","tf":0.01744186046511628},"injectables/ProgressBarService.html":{"ref":"injectables/ProgressBarService.html","tf":0.011428571428571429}}}}}},"w":{"docs":{},"r":{"docs":{},"i":{"docs":{},"t":{"docs":{},"t":{"docs":{},"e":{"docs":{},"n":{"docs":{"index.html":{"ref":"index.html","tf":0.002688172043010753}}}}}}}},"a":{"docs":{},"r":{"docs":{},"r":{"docs":{},"a":{"docs":{},"n":{"docs":{},"t":{"docs":{},"i":{"docs":{"license.html":{"ref":"license.html","tf":0.020618556701030927}}}}}}}}},"h":{"docs":{},"e":{"docs":{},"t":{"docs":{},"h":{"docs":{},"e":{"docs":{},"r":{"docs":{"license.html":{"ref":"license.html","tf":0.010309278350515464}}}}}}}},"i":{"docs":{},"t":{"docs":{},"h":{"docs":{},"o":{"docs":{},"u":{"docs":{},"t":{"docs":{"license.html":{"ref":"license.html","tf":0.030927835051546393}}}}}}}}},"z":{"docs":{},"o":{"docs":{},"o":{"docs":{},"m":{"docs":{"overview.html":{"ref":"overview.html","tf":0.09090909090909091}}}}}}},"length":681},"corpusTokens":["0","0/24","0/4","0/5","0/7","1","10","100","14","16","199","2","200","2018","299","3","30","300","399","4","400","499","50","500","599","600","699","700","799","800","899","900","99","999","abov","accept","achiev","achievefn","achievemiss","achievemission(nam","action","actionfn","actionfunc","add(nam","addbreakpoint","addbreakpoint(point","addcompon","addcomponent(point","addlevel","addlevel(level","addmiss","addmission(nam","addpoint","addpoints(point","and/or","angular","angular/cor","app","app.component.css","app.component.html","app.component.t","app.module.t","appcompon","applic","appmodul","aris","array","assets/badges/beginner.svg","assets/badges/constant.svg","assets/badges/king.svg","assets/badges/lord.svg","assets/badges/nice.svg","assets/badges/ninja.svg","assets/badges/partner.svg","assets/badges/power.svg","assets/badges/usual.svg","assets/badges/vip.svg","associ","author","avail","badg","bar.servic","bar.service.t","bar.service.ts:17","bar.service.ts:26","bar.service.ts:29","bar.service.ts:5","bar.service.ts:6","bar.service.ts:7","bar.service.ts:8","base","beginn","boolean","bootstrap","breakpoint","breakpoint.servic","breakpointservic","breakpointservice(point","brows","c","callback","chang","changelog","charg","child","claim","class","command","compon","component.start","condit","config","config.level","config.point","configur","connect","consid","console.info('compon","console.log('add","console.log('breakpoint","console.log('compon","console.log('config","console.log('delet","console.log('gamif","console.log('sav","const","constant","constructor","constructor(@inject('config","constructor(config","constructor(maxpoint","constructor(nam","constructor(pointsthreshold","constructor(publ","content","contract","copi","copyright","coverag","creat","damag","deal","declar","default","defin","delete(hero","demo","depend","descript","differ","direct","distribut","document","es5","es6","event","exampl","export","express","fals","featur","fev","file","fit","folder","follow","forchild","forchild(config","forroot","forroot(config","free","function","furnish","gamif","gamificationmodul","gamificationmodule.forroot(config","gamificationservic","get","getbreakpoint","getcompon","gethero","getlevel","getlevelbypoint","getlevelbypoints(point","getmiss","getpoint","getprogress","getprogress(point","grant","graph","gui","h","herebi","hero","hero.servic","heroes.component.css","heroes.component.html","heroes.component.t","heroescompon","heroservic","holder","icon","identifi","implement","impli","import","improv","includ","index","info","initgamef","inject","instal","instanc","integr","interact","interfac","interface/level.interfac","isful","istanbul","kind","king","lazi","legend","level","level.rang","level.range.min","liabil","liabl","librari","licens","limit","liter","live","load","lord","match","max","maxpoint","merchant","merg","method","min","mission","mission.achiev","mission.nam","mission.servic","mission.start","missionservic","missionservice(nam","mit","modifi","modul","modulewithprovid","name","name.trim","new","ngmodul","ngoninit","nice","ninja","noninfring","notic","npm","number","obtain","oninit","option","otherwis","out","overview","paramet","particular","partner","permiss","permit","person","pipe","point","pointsthreshold","portion","power","privat","progress","progressbarservic","progressbarservice(point","project","properti","provid","public","publish","purpos","rang","regist","report","requir","reset","restrict","result","return","right","root","run","same","saveload","seek","selector","sell","services/gamification.servic","setlevel","setlevel(level","setlevels(level","setpoint","setpoints(point","shall","share","simpl","softwar","sourc","spec.bundle.j","src/interface/level.interface.t","src/interface/level.interface.ts:2","src/interface/level.interface.ts:3","src/interface/level.interface.ts:4","src/modules/gamification.module.t","src/services/breakpoint.service.t","src/services/breakpoint.service.ts:12","src/services/breakpoint.service.ts:5","src/services/breakpoint.service.ts:6","src/services/gamification.service.t","src/services/gamification.service.ts:10","src/services/gamification.service.ts:11","src/services/gamification.service.ts:12","src/services/gamification.service.ts:13","src/services/gamification.service.ts:14","src/services/gamification.service.ts:23","src/services/gamification.service.ts:29","src/services/gamification.service.ts:32","src/services/gamification.service.ts:38","src/services/gamification.service.ts:41","src/services/gamification.service.ts:45","src/services/gamification.service.ts:48","src/services/gamification.service.ts:59","src/services/gamification.service.ts:62","src/services/gamification.service.ts:65","src/services/gamification.service.ts:68","src/services/gamification.service.ts:71","src/services/gamification.service.ts:74","src/services/gamification.service.ts:77","src/services/gamification.service.ts:80","src/services/gamification.service.ts:87","src/services/gamification.service.ts:9","src/services/mission.service.t","src/services/mission.service.ts:16","src/services/mission.service.ts:19","src/services/mission.service.ts:22","src/services/mission.service.ts:5","src/services/mission.service.ts:6","src/services/mission.service.ts:7","src/services/mission.service.ts:8","src/services/progress","start","starter","startfn","statement","static","string","styleurl","subject","sublicens","subscribe(hero","substanti","tabl","tablesort(document.getelementbyid('coverag","templateurl","test","testit","this.achievefn","this.actionfunc","this.addpoints(mission.point","this.breakpoint","this.breakpoints.foreach((breakpoint","this.breakpoints.push(breakpoint","this.compon","this.components.push(compon","this.components[index].update(point","this.gamif","this.gamification.achievemission('add","this.gamification.achievemission('delet","this.gamification.addbreakpoint(100","this.gamification.addbreakpoint(200","this.gamification.addbreakpoint(300","this.gamification.addcomponent(400","this.gamification.addmission('add","this.gamification.addmission('delet","this.gamification.addmission('sav","this.gamification.getlevel","this.gamification.getlevelbypoints(point","this.gamification.getpoint","this.gethero","this.getlevels().filter(level","this.hero","this.heroes.filter(h","this.heroes.push(hero","this.heroservice.addhero","this.heroservice.deletehero(hero).subscrib","this.heroservice.gethero","this.initgamef","this.isful","this.level","this.levels.push(level","this.levels[0","this.maxpoint","this.miss","this.missions.map((miss","this.missions.push(miss","this.nam","this.point","this.pointsthreshold","this.progress","this.progress.max","this.progress.valu","this.setlevel)[0","this.startfn","this.updatefn","this.us","this.user.level","this.user.point","titl","tort","tour","true","type","typescript","unit","updat","update(point","updatefn","us","useclass","user","usevalu","usual","v5","valu","vip","void","warranti","whether","without","written","zoom"],"pipeline":["trimmer","stopWordFilter","stemmer"]},
    "store": {"index.html":{"url":"index.html","title":"getting-started - index","body":"\n                   \n\nangular-gamification\n\nImprove the interaction of your users with your application using gamification\n\nA simple Gamification library for Angular v5 apps, written in TypeScript, ES6 or ES5.\nThe project is based on the Angular Library Starter.\nGet the Changelog.\nContents\n\n1 Demo / Live Example\n2 Using the library\n3 Documentation\n4 Testing\n\n1 Demo / Live Example\nDemo: Live Example\n2 Using the library\nInstalling\nnpm i angular-gamification --saveLoading\nUsing Module configuration (app.module.ts)\nimport { GamificationModule } from 'angular-gamification';\n\nconst levels = [\n  { badge: 'BEGINNER', icon: './../assets/badges/BEGINNER.svg', range: { min: 1, max: 99 } },\n  { badge: 'NICE', icon: './../assets/badges/NICE.svg', range: { min: 100, max: 199 } },\n  { badge: 'USUAL', icon: './../assets/badges/USUAL.svg', range: { min: 200, max: 299 } },\n  { badge: 'CONSTANT', icon: './../assets/badges/CONSTANT.svg', range: { min: 300, max: 399 } },\n  { badge: 'VIP', icon: './../assets/badges/VIP.svg', range: { min: 400, max: 499 } },\n  { badge: 'NINJA', icon: './../assets/badges/NINJA.svg', range: { min: 500, max: 599 } },\n  { badge: 'POWER', icon: './../assets/badges/POWER.svg', range: { min: 600, max: 699 } },\n  { badge: 'PARTNER', icon: './../assets/badges/PARTNER.svg', range: { min: 700, max: 799 } },\n  { badge: 'LORD', icon: './../assets/badges/LORD.svg', range: { min: 800, max: 899 } },\n  { badge: 'KING', icon: './../assets/badges/KING.svg', range: { min: 900, max: 999 } }\n];\nconst config = {\n  levels: levels\n};\n@NgModules({\n    ...,\n    GamificationModule.forRoot(config)\n})Using component configuration (app.component.ts)\nimport { Component } from '@angular/core';\nimport { GamificationService } from 'angular-gamification'\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.css']\n})\nexport class AppComponent {\n  title = 'Tour of Heroes';\n  public user;\n  public progress;\n  constructor(public gamification: GamificationService) {\n    this.user = {\n      name: 'Gui',\n      points: 0,\n      level: {}\n    };\n    this.progress = {\n      max: 0,\n      value: 0\n    };\n    this.initGamefication();\n  }\n  initGamefication() {\n    console.log('gamification: ', this.gamification);\n    this.gamification.addBreakpoint(100, () => {\n      console.log('breakpoint 100 callback: ', this.gamification.getPoints());\n    });\n    this.gamification.addBreakpoint(200, () => {\n      console.log('breakpoint 200 callback: ', this.gamification.getPoints());\n    });\n    this.gamification.addBreakpoint(300, () => {\n      console.log('breakpoint 300 callback: ', this.gamification.getPoints());\n    });\n    this.gamification.addBreakpoint(300, () => {\n      console.log('breakpoint 400 callback: ', this.gamification.getPoints());\n    });\n\n    let component = this.gamification.addComponent(400, () => {\n      console.info('component update callback');\n      let points = this.gamification.getPoints();\n      this.gamification.getLevelByPoints(points);\n      this.user.points = points;\n      this.user.level = this.gamification.getLevel();\n      this.progress.value = points;\n    }, () => {\n      console.log('component 400 start callback');\n      this.progress.max = 400;\n      this.user.level = this.gamification.getLevel();\n    });\n    this.gamification.addMission('add', 50, () => {\n      console.log('add mission start');\n    }, () => {\n      console.log('add mission achieve: ', this.gamification.getPoints());\n    });\n    this.gamification.addMission('save', 30, () => {\n      console.log('save mission start');\n    }, () => {\n      console.log('save mission achieve: ', this.gamification.getPoints());\n    });\n    this.gamification.addMission('delete', 10, () => {\n      console.log('delete mission start');\n    }, () => {\n      console.log('delete mission achieve: ', this.gamification.getPoints());\n    });\n  }\n}Using Component mission (heroes.component.ts)\nimport { Component, OnInit } from '@angular/core';\n\nimport { Hero } from '../hero';\nimport { HeroService } from '../hero.service';\n\nimport { GamificationService } from 'angular-gamification';\n\n@Component({\n  selector: 'app-heroes',\n  templateUrl: './heroes.component.html',\n  styleUrls: ['./heroes.component.css']\n})\nexport class HeroesComponent implements OnInit {\n  heroes: Hero[];\n\n  constructor(\n    private heroService: HeroService,\n    public gamification: GamificationService\n  ) { }\n\n  ngOnInit() {\n    this.getHeroes();\n  }\n\n  getHeroes(): void {\n    this.heroService.getHeroes()\n    .subscribe(heroes => this.heroes = heroes);\n  }\n\n  add(name: string): void {\n    name = name.trim();\n    if (!name) { return; }\n    this.heroService.addHero({ name } as Hero)\n      .subscribe(hero => {\n        this.heroes.push(hero);\n        this.gamification.achieveMission('add');\n      });\n  }\n\n  delete(hero: Hero): void {\n    this.heroes = this.heroes.filter(h => h !== hero);\n    this.heroService.deleteHero(hero).subscribe(() => {\n      this.gamification.achieveMission('delete');\n    });\n  }\n}3 Documentation\nDocumentation\n4 Testing\nThe following command runs unit & integration tests that are in the tests folder (you can change the folder in spec.bundle.js file):\nnpm testIt also reports coverage using Istanbul.\nLicense\nMIT\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"overview.html":{"url":"overview.html","title":"overview - overview","body":"\n                   \n\n\nOverview\n            \n                \n                    \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\n\n\n                \n                \n                \n                    Zoom in\n                    Reset\n                    Zoom out\n                \n            \n\n    \n            \n                \n                    \n                        \n                        \n                            1 module\n                        \n                    \n                \n            \n            \n                \n                    \n                        \n                        4 injectables\n                    \n                \n            \n            \n                \n                    \n                        \n                        1 interface\n                    \n                \n            \n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"changelog.html":{"url":"changelog.html","title":"getting-started - changelog","body":"\n                   \n\nAngular Gamification Changelog\n\nFev 16, 2018\n\nAccepting module config\n\n\nFev 14, 2018\n\nCreate library\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"license.html":{"url":"license.html","title":"getting-started - license","body":"\n                   \n\nMIT License\nCopyright (c) 2018 Gui Seek\nPermission is hereby granted, free of charge, to any person obtaining a copy\nof this software and associated documentation files (the \"Software\"), to deal\nin the Software without restriction, including without limitation the rights\nto use, copy, modify, merge, publish, distribute, sublicense, and/or sell\ncopies of the Software, and to permit persons to whom the Software is\nfurnished to do so, subject to the following conditions:\nThe above copyright notice and this permission notice shall be included in all\ncopies or substantial portions of the Software.\nTHE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\nIMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\nFITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\nAUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\nLIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\nOUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE\nSOFTWARE.\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules.html":{"url":"modules.html","title":"modules - modules","body":"\n                   \n\n\n\nModules\n\n    \n            \n                \n                    \n                        GamificationModule\n                    \n                    \n                                \n                                    No graph available.\n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n    \n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/GamificationModule.html":{"url":"modules/GamificationModule.html","title":"module - GamificationModule","body":"\n                   \n\n\n\n\n  Modules\n  GamificationModule\n\n\n\n\n    \n        Info\n    \n\n\n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/modules/gamification.module.ts\n        \n\n\n        \n            \n            \n        \n    \n\n\n    \n        import { NgModule, ModuleWithProviders } from '@angular/core';\n\nimport { GamificationService } from '../services/gamification.service';\n\n@NgModule({\n  declarations: [\n    // Pipes.\n    // Directives.\n    // Components.\n  ],\n  exports: [\n    // Pipes.\n    // Directives.\n    // Components.\n  ]\n})\n// Consider registering providers using a forRoot() method\n// when the module exports components, directives or pipes that require sharing the same providers instances.\n// Consider registering providers also using a forChild() method\n// when they requires new providers instances or different providers in child modules.\nexport class GamificationModule {\n\n  /**\n   * Use in AppModule: new instance of GamificationService.\n   */\n  public static forRoot(config?: any): ModuleWithProviders {\n    return {\n      ngModule: GamificationModule,\n      providers: [\n        GamificationService,\n        {\n          provide: 'config', useValue: config\n        }\n        // {\n        //   provide: GamificationService, useValue: config, useClass: GamificationModule.forRoot(config)\n        // }\n      ]\n    };\n  }\n\n  /**\n   * Use in features modules with lazy loading: new instance of GamificationService.\n   */\n  public static forChild(config?: any): ModuleWithProviders {\n    return {\n      ngModule: GamificationModule,\n      providers: [\n        GamificationService,\n        {\n          provide: 'config', useValue: config\n        }\n        // GamificationService,\n        // {\n        //   provide: GamificationService, useValue: config, useClass: GamificationService\n        // }\n      ]\n    };\n  }\n\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/BreakpointService.html":{"url":"injectables/BreakpointService.html","title":"injectable - BreakpointService","body":"\n                   \n\n\n\n\n\n\n\n  Injectables\n  BreakpointService\n\n\n\n    \n        Info\n    \n\n\n    \n        Source\n    \n\n\n\n    \n        \n            File\n        \n        \n            src/services/breakpoint.service.ts\n        \n\n\n\n            \n                Index\n                \n                    \n                        \n                            \n                                Properties\n                            \n                        \n                        \n                            \n                                \n                                    \n                                        Public actionFunc\n                                    \n                                    \n                                        Public pointsThreshold\n                                    \n                                \n                            \n                        \n                        \n                            \n                                Methods\n                            \n                        \n                        \n                            \n                                \n                                    \n                                        Public action\n                                    \n                                \n                            \n                        \n                    \n                \n            \n\n            \n                Constructor\n                    \n                        \n                            \n                                \n                                    constructor(pointsThreshold: number, action?: Function)\n                                \n                            \n                                    \n                                        \n                                            Defined in src/services/breakpoint.service.ts:6\n                                        \n                                    \n            \n                            \n                                \n                                        \n                                                Parameters :\n                                                \n                                                    \n                                                        \n                                                            Name\n                                                            Type\n                                                            Optional\n                                                            Description\n                                                        \n                                                    \n                                                    \n                                                            \n                                                              pointsThreshold\n                                                              \n                                                                        number\n                                                              \n                                                              \n                                                              \n                                                              \n                                                            \n                                                            \n                                                              action\n                                                              \n                                                                        Function\n                                                              \n                                                              \n                                                                      true\n                                                              \n                                                              \n                                                            \n                                                    \n                                                \n                                        \n                                \n                            \n                        \n                    \n            \n\n            \n                \n                    \n                        Methods\n                    \n                    \n                        \n                            \n                                \n                                    \n                                    Public action\n                                \n                            \n                            \n                                \n                                        \n                                    action()\n                                \n                            \n            \n            \n                                    \n                                        \n                                            Defined in src/services/breakpoint.service.ts:12\n                                        \n                                    \n            \n                            \n                                \n            \n                                        \n                                            Returns :     void\n            \n                                        \n                                \n                            \n                        \n                    \n            \n\n            \n                \n                    \n                        Properties\n                    \n                    \n                        \n                            \n                                \n                                    \n                                    Public actionFunc\n                                \n                            \n                            \n                                \n                                    actionFunc:     Function\n            \n                                \n                            \n                                \n                                    \n                                        Type :     Function\n            \n                                    \n                                \n                                    \n                                        \n                                            Defined in src/services/breakpoint.service.ts:5\n                                        \n                                    \n            \n            \n                        \n                    \n                    \n                        \n                            \n                                \n                                    \n                                    Public pointsThreshold\n                                \n                            \n                            \n                                \n                                    pointsThreshold:     number\n            \n                                \n                            \n                                \n                                    \n                                        Type :     number\n            \n                                    \n                                \n                                    \n                                        \n                                            Defined in src/services/breakpoint.service.ts:6\n                                        \n                                    \n            \n            \n                        \n                    \n            \n\n    \n\n\n    \n        import { Injectable } from '@angular/core';\n\n@Injectable()\nexport class BreakpointService {\n  public actionFunc: Function = () => { };\n  public pointsThreshold: number;\n\n  constructor(pointsThreshold: number, action?: Function) {\n    this.pointsThreshold = pointsThreshold;\n    this.actionFunc = action || this.actionFunc;\n  }\n  public action() {\n    this.actionFunc();\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/GamificationService.html":{"url":"injectables/GamificationService.html","title":"injectable - GamificationService","body":"\n                   \n\n\n\n\n\n\n\n  Injectables\n  GamificationService\n\n\n\n    \n        Info\n    \n\n\n    \n        Source\n    \n\n\n\n    \n        \n            File\n        \n        \n            src/services/gamification.service.ts\n        \n\n\n\n            \n                Index\n                \n                    \n                        \n                            \n                                Properties\n                            \n                        \n                        \n                            \n                                \n                                    \n                                        Public breakpoints\n                                    \n                                    \n                                        Public components\n                                    \n                                    \n                                        Public level\n                                    \n                                    \n                                        Public levels\n                                    \n                                    \n                                        Public missions\n                                    \n                                    \n                                        Public points\n                                    \n                                \n                            \n                        \n                        \n                            \n                                Methods\n                            \n                        \n                        \n                            \n                                \n                                    \n                                         achieveMission\n                                    \n                                    \n                                         addBreakpoint\n                                    \n                                    \n                                         addComponent\n                                    \n                                    \n                                         addLevel\n                                    \n                                    \n                                         addMission\n                                    \n                                    \n                                         addPoints\n                                    \n                                    \n                                         getBreakpoints\n                                    \n                                    \n                                         getComponents\n                                    \n                                    \n                                         getLevel\n                                    \n                                    \n                                         getLevelByPoints\n                                    \n                                    \n                                         getLevels\n                                    \n                                    \n                                         getMissions\n                                    \n                                    \n                                         getPoints\n                                    \n                                    \n                                         setLevel\n                                    \n                                    \n                                         setLevels\n                                    \n                                    \n                                         setPoints\n                                    \n                                \n                            \n                        \n                    \n                \n            \n\n            \n                Constructor\n                    \n                        \n                            \n                                \n                                    constructor(config: any)\n                                \n                            \n                                    \n                                        \n                                            Defined in src/services/gamification.service.ts:14\n                                        \n                                    \n            \n                            \n                                \n                                        \n                                                Parameters :\n                                                \n                                                    \n                                                        \n                                                            Name\n                                                            Type\n                                                            Optional\n                                                            Description\n                                                        \n                                                    \n                                                    \n                                                            \n                                                              config\n                                                              \n                                                                        any\n                                                              \n                                                              \n                                                              \n                                                              \n                                                            \n                                                    \n                                                \n                                        \n                                \n                            \n                        \n                    \n            \n\n            \n                \n                    \n                        Methods\n                    \n                    \n                        \n                            \n                                \n                                    \n                                     achieveMission\n                                \n                            \n                            \n                                \n            achieveMission(name: string)\n                                \n                            \n            \n            \n                                    \n                                        \n                                            Defined in src/services/gamification.service.ts:87\n                                        \n                                    \n            \n                            \n                                \n            \n                                        \n                                                Parameters :\n                                                \n                                                    \n                                                        \n                                                            Name\n                                                            Type\n                                                            Optional\n                                                            Description\n                                                        \n                                                    \n                                                    \n                                                            \n                                                              name\n                                                              \n                                                                      string\n                                                              \n                                                              \n                                                              \n                                                              \n                                                            \n                                                    \n                                                \n                                        \n                                        \n                                        \n                                        \n                                            Returns :     any\n            \n                                        \n                                            \n                                                \n                                            \n                                \n                            \n                        \n                    \n                    \n                        \n                            \n                                \n                                    \n                                     addBreakpoint\n                                \n                            \n                            \n                                \n            addBreakpoint(points: number, actionFn?: Function)\n                                \n                            \n            \n            \n                                    \n                                        \n                                            Defined in src/services/gamification.service.ts:41\n                                        \n                                    \n            \n                            \n                                \n            \n                                        \n                                                Parameters :\n                                                \n                                                    \n                                                        \n                                                            Name\n                                                            Type\n                                                            Optional\n                                                            Description\n                                                        \n                                                    \n                                                    \n                                                            \n                                                              points\n                                                              \n                                                                      number\n                                                              \n                                                              \n                                                              \n                                                              \n                                                            \n                                                            \n                                                              actionFn\n                                                              \n                                                                      Function\n                                                              \n                                                              \n                                                                  true\n                                                              \n                                                              \n                                                            \n                                                    \n                                                \n                                        \n                                        \n                                        \n                                        \n                                            Returns :     void\n            \n                                        \n                                            \n                                                \n                                            \n                                \n                            \n                        \n                    \n                    \n                        \n                            \n                                \n                                    \n                                     addComponent\n                                \n                            \n                            \n                                \n            addComponent(points: number, updateFn?: Function, startFn?: Function)\n                                \n                            \n            \n            \n                                    \n                                        \n                                            Defined in src/services/gamification.service.ts:23\n                                        \n                                    \n            \n                            \n                                \n            \n                                        \n                                                Parameters :\n                                                \n                                                    \n                                                        \n                                                            Name\n                                                            Type\n                                                            Optional\n                                                            Description\n                                                        \n                                                    \n                                                    \n                                                            \n                                                              points\n                                                              \n                                                                      number\n                                                              \n                                                              \n                                                              \n                                                              \n                                                            \n                                                            \n                                                              updateFn\n                                                              \n                                                                      Function\n                                                              \n                                                              \n                                                                  true\n                                                              \n                                                              \n                                                            \n                                                            \n                                                              startFn\n                                                              \n                                                                      Function\n                                                              \n                                                              \n                                                                  true\n                                                              \n                                                              \n                                                            \n                                                    \n                                                \n                                        \n                                        \n                                        \n                                        \n                                            Returns :     any\n            \n                                        \n                                            \n                                                \n                                            \n                                \n                            \n                        \n                    \n                    \n                        \n                            \n                                \n                                    \n                                     addLevel\n                                \n                            \n                            \n                                \n            addLevel(level: Level)\n                                \n                            \n            \n            \n                                    \n                                        \n                                            Defined in src/services/gamification.service.ts:71\n                                        \n                                    \n            \n                            \n                                \n            \n                                        \n                                                Parameters :\n                                                \n                                                    \n                                                        \n                                                            Name\n                                                            Type\n                                                            Optional\n                                                            Description\n                                                        \n                                                    \n                                                    \n                                                            \n                                                              level\n                                                              \n                                                                      Level\n                                                              \n                                                              \n                                                              \n                                                              \n                                                            \n                                                    \n                                                \n                                        \n                                        \n                                        \n                                        \n                                            Returns :     void\n            \n                                        \n                                            \n                                                \n                                            \n                                \n                            \n                        \n                    \n                    \n                        \n                            \n                                \n                                    \n                                     addMission\n                                \n                            \n                            \n                                \n            addMission(name: string, points: number, startFn?: Function, achieveFn?: Function)\n                                \n                            \n            \n            \n                                    \n                                        \n                                            Defined in src/services/gamification.service.ts:32\n                                        \n                                    \n            \n                            \n                                \n            \n                                        \n                                                Parameters :\n                                                \n                                                    \n                                                        \n                                                            Name\n                                                            Type\n                                                            Optional\n                                                            Description\n                                                        \n                                                    \n                                                    \n                                                            \n                                                              name\n                                                              \n                                                                      string\n                                                              \n                                                              \n                                                              \n                                                              \n                                                            \n                                                            \n                                                              points\n                                                              \n                                                                      number\n                                                              \n                                                              \n                                                              \n                                                              \n                                                            \n                                                            \n                                                              startFn\n                                                              \n                                                                      Function\n                                                              \n                                                              \n                                                                  true\n                                                              \n                                                              \n                                                            \n                                                            \n                                                              achieveFn\n                                                              \n                                                                      Function\n                                                              \n                                                              \n                                                                  true\n                                                              \n                                                              \n                                                            \n                                                    \n                                                \n                                        \n                                        \n                                        \n                                        \n                                            Returns :     any\n            \n                                        \n                                            \n                                                \n                                            \n                                \n                            \n                        \n                    \n                    \n                        \n                            \n                                \n                                    \n                                     addPoints\n                                \n                            \n                            \n                                \n            addPoints(points: number)\n                                \n                            \n            \n            \n                                    \n                                        \n                                            Defined in src/services/gamification.service.ts:48\n                                        \n                                    \n            \n                            \n                                \n            \n                                        \n                                                Parameters :\n                                                \n                                                    \n                                                        \n                                                            Name\n                                                            Type\n                                                            Optional\n                                                            Description\n                                                        \n                                                    \n                                                    \n                                                            \n                                                              points\n                                                              \n                                                                      number\n                                                              \n                                                              \n                                                              \n                                                              \n                                                            \n                                                    \n                                                \n                                        \n                                        \n                                        \n                                        \n                                            Returns :     void\n            \n                                        \n                                            \n                                                \n                                            \n                                \n                            \n                        \n                    \n                    \n                        \n                            \n                                \n                                    \n                                     getBreakpoints\n                                \n                            \n                            \n                                \n            getBreakpoints()\n                                \n                            \n            \n            \n                                    \n                                        \n                                            Defined in src/services/gamification.service.ts:45\n                                        \n                                    \n            \n                            \n                                \n            \n                                        \n                                            Returns :     any\n            \n                                        \n                                \n                            \n                        \n                    \n                    \n                        \n                            \n                                \n                                    \n                                     getComponents\n                                \n                            \n                            \n                                \n            getComponents()\n                                \n                            \n            \n            \n                                    \n                                        \n                                            Defined in src/services/gamification.service.ts:29\n                                        \n                                    \n            \n                            \n                                \n            \n                                        \n                                            Returns :     any\n            \n                                        \n                                \n                            \n                        \n                    \n                    \n                        \n                            \n                                \n                                    \n                                     getLevel\n                                \n                            \n                            \n                                \n            getLevel()\n                                \n                            \n            \n            \n                                    \n                                        \n                                            Defined in src/services/gamification.service.ts:77\n                                        \n                                    \n            \n                            \n                                \n            \n                                        \n                                            Returns :     any\n            \n                                        \n                                \n                            \n                        \n                    \n                    \n                        \n                            \n                                \n                                    \n                                     getLevelByPoints\n                                \n                            \n                            \n                                \n            getLevelByPoints(points: number)\n                                \n                            \n            \n            \n                                    \n                                        \n                                            Defined in src/services/gamification.service.ts:80\n                                        \n                                    \n            \n                            \n                                \n            \n                                        \n                                                Parameters :\n                                                \n                                                    \n                                                        \n                                                            Name\n                                                            Type\n                                                            Optional\n                                                            Description\n                                                        \n                                                    \n                                                    \n                                                            \n                                                              points\n                                                              \n                                                                      number\n                                                              \n                                                              \n                                                              \n                                                              \n                                                            \n                                                    \n                                                \n                                        \n                                        \n                                        \n                                        \n                                            Returns :     any\n            \n                                        \n                                            \n                                                \n                                            \n                                \n                            \n                        \n                    \n                    \n                        \n                            \n                                \n                                    \n                                     getLevels\n                                \n                            \n                            \n                                \n            getLevels()\n                                \n                            \n            \n            \n                                    \n                                        \n                                            Defined in src/services/gamification.service.ts:68\n                                        \n                                    \n            \n                            \n                                \n            \n                                        \n                                            Returns :     []\n            \n                                        \n                                \n                            \n                        \n                    \n                    \n                        \n                            \n                                \n                                    \n                                     getMissions\n                                \n                            \n                            \n                                \n            getMissions()\n                                \n                            \n            \n            \n                                    \n                                        \n                                            Defined in src/services/gamification.service.ts:38\n                                        \n                                    \n            \n                            \n                                \n            \n                                        \n                                            Returns :     any\n            \n                                        \n                                \n                            \n                        \n                    \n                    \n                        \n                            \n                                \n                                    \n                                     getPoints\n                                \n                            \n                            \n                                \n            getPoints()\n                                \n                            \n            \n            \n                                    \n                                        \n                                            Defined in src/services/gamification.service.ts:59\n                                        \n                                    \n            \n                            \n                                \n            \n                                        \n                                            Returns :     number\n            \n                                        \n                                \n                            \n                        \n                    \n                    \n                        \n                            \n                                \n                                    \n                                     setLevel\n                                \n                            \n                            \n                                \n            setLevel(level: Level)\n                                \n                            \n            \n            \n                                    \n                                        \n                                            Defined in src/services/gamification.service.ts:74\n                                        \n                                    \n            \n                            \n                                \n            \n                                        \n                                                Parameters :\n                                                \n                                                    \n                                                        \n                                                            Name\n                                                            Type\n                                                            Optional\n                                                            Description\n                                                        \n                                                    \n                                                    \n                                                            \n                                                              level\n                                                              \n                                                                      Level\n                                                              \n                                                              \n                                                              \n                                                              \n                                                            \n                                                    \n                                                \n                                        \n                                        \n                                        \n                                        \n                                            Returns :     void\n            \n                                        \n                                            \n                                                \n                                            \n                                \n                            \n                        \n                    \n                    \n                        \n                            \n                                \n                                    \n                                     setLevels\n                                \n                            \n                            \n                                \n            setLevels(levels: Level[])\n                                \n                            \n            \n            \n                                    \n                                        \n                                            Defined in src/services/gamification.service.ts:65\n                                        \n                                    \n            \n                            \n                                \n            \n                                        \n                                                Parameters :\n                                                \n                                                    \n                                                        \n                                                            Name\n                                                            Type\n                                                            Optional\n                                                            Description\n                                                        \n                                                    \n                                                    \n                                                            \n                                                              levels\n                                                              \n                                                                      Level[]\n                                                              \n                                                              \n                                                              \n                                                              \n                                                            \n                                                    \n                                                \n                                        \n                                        \n                                        \n                                        \n                                            Returns :     void\n            \n                                        \n                                            \n                                                \n                                            \n                                \n                            \n                        \n                    \n                    \n                        \n                            \n                                \n                                    \n                                     setPoints\n                                \n                            \n                            \n                                \n            setPoints(points: number)\n                                \n                            \n            \n            \n                                    \n                                        \n                                            Defined in src/services/gamification.service.ts:62\n                                        \n                                    \n            \n                            \n                                \n            \n                                        \n                                                Parameters :\n                                                \n                                                    \n                                                        \n                                                            Name\n                                                            Type\n                                                            Optional\n                                                            Description\n                                                        \n                                                    \n                                                    \n                                                            \n                                                              points\n                                                              \n                                                                      number\n                                                              \n                                                              \n                                                              \n                                                              \n                                                            \n                                                    \n                                                \n                                        \n                                        \n                                        \n                                        \n                                            Returns :     void\n            \n                                        \n                                            \n                                                \n                                            \n                                \n                            \n                        \n                    \n            \n\n            \n                \n                    \n                        Properties\n                    \n                    \n                        \n                            \n                                \n                                    \n                                    Public breakpoints\n                                \n                            \n                            \n                                \n                                    breakpoints:     \n            \n                                \n                            \n                                    \n                                        \n                                            Defined in src/services/gamification.service.ts:12\n                                        \n                                    \n            \n            \n                        \n                    \n                    \n                        \n                            \n                                \n                                    \n                                    Public components\n                                \n                            \n                            \n                                \n                                    components:     \n            \n                                \n                            \n                                    \n                                        \n                                            Defined in src/services/gamification.service.ts:14\n                                        \n                                    \n            \n            \n                        \n                    \n                    \n                        \n                            \n                                \n                                    \n                                    Public level\n                                \n                            \n                            \n                                \n                                    level:     Level\n            \n                                \n                            \n                                \n                                    \n                                        Type :     Level\n            \n                                    \n                                \n                                    \n                                        \n                                            Defined in src/services/gamification.service.ts:11\n                                        \n                                    \n            \n            \n                        \n                    \n                    \n                        \n                            \n                                \n                                    \n                                    Public levels\n                                \n                            \n                            \n                                \n                                    levels:     Array\n            \n                                \n                            \n                                \n                                    \n                                        Type :     Array\n            \n                                    \n                                \n                                    \n                                        \n                                            Defined in src/services/gamification.service.ts:10\n                                        \n                                    \n            \n            \n                        \n                    \n                    \n                        \n                            \n                                \n                                    \n                                    Public missions\n                                \n                            \n                            \n                                \n                                    missions:     \n            \n                                \n                            \n                                    \n                                        \n                                            Defined in src/services/gamification.service.ts:13\n                                        \n                                    \n            \n            \n                        \n                    \n                    \n                        \n                            \n                                \n                                    \n                                    Public points\n                                \n                            \n                            \n                                \n                                    points:     number\n            \n                                \n                            \n                                \n                                    \n                                        Type :     number\n            \n                                    \n                                \n                                \n                                    \n                                        Default value : 0\n                                    \n                                \n                                    \n                                        \n                                            Defined in src/services/gamification.service.ts:9\n                                        \n                                    \n            \n            \n                        \n                    \n            \n\n    \n\n\n    \n        import { Injectable, Inject } from '@angular/core';\nimport { MissionService } from './mission.service';\nimport { ProgressBarService } from './progress-bar.service';\nimport { BreakpointService } from './breakpoint.service';\nimport { Level } from '../interface/level.interface';\n\n@Injectable()\nexport class GamificationService {\n  public points: number = 0;\n  public levels: Array = [];\n  public level: Level;\n  public breakpoints = Array();\n  public missions = Array();\n  public components = Array();\n  constructor(@Inject('config') private config :any) {\n    // console.log('config: ', config);\n    this.levels = config.levels || this.levels,\n    this.level = config.level || this.levels[0],\n    this.points = config.points || this.points\n    // this.levels = [];\n    // this.level = this.levels[0];\n  }\n  addComponent(points: number, updateFn?: Function, startFn?: Function) {\n    const component = new ProgressBarService(points, updateFn, startFn);\n    this.components.push(component);\n    component.start();\n    return component;\n  }\n  getComponents() {\n    return this.components;\n  }\n  addMission(name: string, points: number, startFn?: Function, achieveFn?: Function) {\n    const mission = new MissionService(name, points, startFn, achieveFn);\n    this.missions.push(mission);\n    mission.start();\n    return mission.name;\n  }\n  getMissions() {\n    return this.missions;\n  }\n  addBreakpoint(points: number, actionFn?: Function) {\n    const breakpoint = new BreakpointService(points, actionFn);\n    this.breakpoints.push(breakpoint);\n  }\n  getBreakpoints() {\n    return this.breakpoints;\n  }\n  addPoints(points: number) {\n    this.points += points;\n    this.breakpoints.forEach((breakpoint, index) => {\n      if (((this.points - points)  {\n      this.components[index].update(points);\n    });\n  }\n  getPoints() {\n    return this.points;\n  }\n  setPoints(points: number) {\n    this.points = points;\n  }\n  setLevels(levels: Level[]) {\n    this.levels = levels;\n  }\n  getLevels(): Level[] {\n    return this.levels;\n  }\n  addLevel(level: Level) {\n    this.levels.push(level);\n  }\n  setLevel(level: Level) {\n    this.level = level;\n  }\n  getLevel() {\n    return this.level;\n  }\n  getLevelByPoints(points: number) {\n    return this.getLevels().filter(level => {\n      if (level.range) {\n        return (level.range.min = points);\n      }\n    }, this.setLevel)[0];\n  }\n  achieveMission(name: string) {\n    return this.missions.map((mission, index) => {\n      if (mission.name === name) {\n        this.addPoints(mission.points);\n        mission.achieve();\n      }\n    });\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/MissionService.html":{"url":"injectables/MissionService.html","title":"injectable - MissionService","body":"\n                   \n\n\n\n\n\n\n\n  Injectables\n  MissionService\n\n\n\n    \n        Info\n    \n\n\n    \n        Source\n    \n\n\n\n    \n        \n            File\n        \n        \n            src/services/mission.service.ts\n        \n\n\n\n            \n                Index\n                \n                    \n                        \n                            \n                                Properties\n                            \n                        \n                        \n                            \n                                \n                                    \n                                        Private achieveFn\n                                    \n                                    \n                                        Public name\n                                    \n                                    \n                                        Public points\n                                    \n                                    \n                                        Private startFn\n                                    \n                                \n                            \n                        \n                        \n                            \n                                Methods\n                            \n                        \n                        \n                            \n                                \n                                    \n                                        Public achieve\n                                    \n                                    \n                                        Public setPoints\n                                    \n                                    \n                                        Public start\n                                    \n                                \n                            \n                        \n                    \n                \n            \n\n            \n                Constructor\n                    \n                        \n                            \n                                \n                                    constructor(name: string, points: number, startFn?: Function, achieveFn?: Function)\n                                \n                            \n                                    \n                                        \n                                            Defined in src/services/mission.service.ts:8\n                                        \n                                    \n            \n                            \n                                \n                                        \n                                                Parameters :\n                                                \n                                                    \n                                                        \n                                                            Name\n                                                            Type\n                                                            Optional\n                                                            Description\n                                                        \n                                                    \n                                                    \n                                                            \n                                                              name\n                                                              \n                                                                        string\n                                                              \n                                                              \n                                                              \n                                                              \n                                                            \n                                                            \n                                                              points\n                                                              \n                                                                        number\n                                                              \n                                                              \n                                                              \n                                                              \n                                                            \n                                                            \n                                                              startFn\n                                                              \n                                                                        Function\n                                                              \n                                                              \n                                                                      true\n                                                              \n                                                              \n                                                            \n                                                            \n                                                              achieveFn\n                                                              \n                                                                        Function\n                                                              \n                                                              \n                                                                      true\n                                                              \n                                                              \n                                                            \n                                                    \n                                                \n                                        \n                                \n                            \n                        \n                    \n            \n\n            \n                \n                    \n                        Methods\n                    \n                    \n                        \n                            \n                                \n                                    \n                                    Public achieve\n                                \n                            \n                            \n                                \n                                        \n                                    achieve()\n                                \n                            \n            \n            \n                                    \n                                        \n                                            Defined in src/services/mission.service.ts:22\n                                        \n                                    \n            \n                            \n                                \n            \n                                        \n                                            Returns :     void\n            \n                                        \n                                \n                            \n                        \n                    \n                    \n                        \n                            \n                                \n                                    \n                                    Public setPoints\n                                \n                            \n                            \n                                \n                                        \n                                    setPoints(points: number)\n                                \n                            \n            \n            \n                                    \n                                        \n                                            Defined in src/services/mission.service.ts:16\n                                        \n                                    \n            \n                            \n                                \n            \n                                        \n                                                Parameters :\n                                                \n                                                    \n                                                        \n                                                            Name\n                                                            Type\n                                                            Optional\n                                                            Description\n                                                        \n                                                    \n                                                    \n                                                            \n                                                              points\n                                                              \n                                                                      number\n                                                              \n                                                              \n                                                              \n                                                              \n                                                            \n                                                    \n                                                \n                                        \n                                        \n                                        \n                                        \n                                            Returns :     void\n            \n                                        \n                                            \n                                                \n                                            \n                                \n                            \n                        \n                    \n                    \n                        \n                            \n                                \n                                    \n                                    Public start\n                                \n                            \n                            \n                                \n                                        \n                                    start()\n                                \n                            \n            \n            \n                                    \n                                        \n                                            Defined in src/services/mission.service.ts:19\n                                        \n                                    \n            \n                            \n                                \n            \n                                        \n                                            Returns :     void\n            \n                                        \n                                \n                            \n                        \n                    \n            \n\n            \n                \n                    \n                        Properties\n                    \n                    \n                        \n                            \n                                \n                                    \n                                    Private achieveFn\n                                \n                            \n                            \n                                \n                                    achieveFn:     Function\n            \n                                \n                            \n                                \n                                    \n                                        Type :     Function\n            \n                                    \n                                \n                                    \n                                        \n                                            Defined in src/services/mission.service.ts:8\n                                        \n                                    \n            \n            \n                        \n                    \n                    \n                        \n                            \n                                \n                                    \n                                    Public name\n                                \n                            \n                            \n                                \n                                    name:     string\n            \n                                \n                            \n                                \n                                    \n                                        Type :     string\n            \n                                    \n                                \n                                \n                                    \n                                        Default value : Mission\n                                    \n                                \n                                    \n                                        \n                                            Defined in src/services/mission.service.ts:5\n                                        \n                                    \n            \n            \n                        \n                    \n                    \n                        \n                            \n                                \n                                    \n                                    Public points\n                                \n                            \n                            \n                                \n                                    points:     number\n            \n                                \n                            \n                                \n                                    \n                                        Type :     number\n            \n                                    \n                                \n                                \n                                    \n                                        Default value : 0\n                                    \n                                \n                                    \n                                        \n                                            Defined in src/services/mission.service.ts:6\n                                        \n                                    \n            \n            \n                        \n                    \n                    \n                        \n                            \n                                \n                                    \n                                    Private startFn\n                                \n                            \n                            \n                                \n                                    startFn:     Function\n            \n                                \n                            \n                                \n                                    \n                                        Type :     Function\n            \n                                    \n                                \n                                    \n                                        \n                                            Defined in src/services/mission.service.ts:7\n                                        \n                                    \n            \n            \n                        \n                    \n            \n\n    \n\n\n    \n        import { Injectable } from '@angular/core';\n\n@Injectable()\nexport class MissionService {\n  public name: string = 'Mission';\n  public points: number = 0;\n  private startFn: Function = () => { };\n  private achieveFn: Function = () => { };\n\n  constructor(name: string, points: number, startFn?: Function, achieveFn?: Function) {\n    this.name = name;\n    this.points = points;\n    this.startFn = startFn || this.startFn;\n    this.achieveFn = achieveFn || this.achieveFn;\n  }\n  public setPoints(points: number) {\n    this.points = points;\n  }\n  public start() {\n    this.startFn();\n  }\n  public achieve() {\n    this.achieveFn();\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/ProgressBarService.html":{"url":"injectables/ProgressBarService.html","title":"injectable - ProgressBarService","body":"\n                   \n\n\n\n\n\n\n\n  Injectables\n  ProgressBarService\n\n\n\n    \n        Info\n    \n\n\n    \n        Source\n    \n\n\n\n    \n        \n            File\n        \n        \n            src/services/progress-bar.service.ts\n        \n\n\n\n            \n                Index\n                \n                    \n                        \n                            \n                                Properties\n                            \n                        \n                        \n                            \n                                \n                                    \n                                        Public isFull\n                                    \n                                    \n                                        Public maxPoints\n                                    \n                                    \n                                        Private startFn\n                                    \n                                    \n                                        Private updateFn\n                                    \n                                \n                            \n                        \n                        \n                            \n                                Methods\n                            \n                        \n                        \n                            \n                                \n                                    \n                                        Public getProgress\n                                    \n                                    \n                                        Public start\n                                    \n                                    \n                                        Public update\n                                    \n                                \n                            \n                        \n                    \n                \n            \n\n            \n                Constructor\n                    \n                        \n                            \n                                \n                                    constructor(maxPoints: number, updateFn?: Function, startFn?: Function)\n                                \n                            \n                                    \n                                        \n                                            Defined in src/services/progress-bar.service.ts:8\n                                        \n                                    \n            \n                            \n                                \n                                        \n                                                Parameters :\n                                                \n                                                    \n                                                        \n                                                            Name\n                                                            Type\n                                                            Optional\n                                                            Description\n                                                        \n                                                    \n                                                    \n                                                            \n                                                              maxPoints\n                                                              \n                                                                        number\n                                                              \n                                                              \n                                                              \n                                                              \n                                                            \n                                                            \n                                                              updateFn\n                                                              \n                                                                        Function\n                                                              \n                                                              \n                                                                      true\n                                                              \n                                                              \n                                                            \n                                                            \n                                                              startFn\n                                                              \n                                                                        Function\n                                                              \n                                                              \n                                                                      true\n                                                              \n                                                              \n                                                            \n                                                    \n                                                \n                                        \n                                \n                            \n                        \n                    \n            \n\n            \n                \n                    \n                        Methods\n                    \n                    \n                        \n                            \n                                \n                                    \n                                    Public getProgress\n                                \n                            \n                            \n                                \n                                        \n                                    getProgress(points: number)\n                                \n                            \n            \n            \n                                    \n                                        \n                                            Defined in src/services/progress-bar.service.ts:29\n                                        \n                                    \n            \n                            \n                                \n            \n                                        \n                                                Parameters :\n                                                \n                                                    \n                                                        \n                                                            Name\n                                                            Type\n                                                            Optional\n                                                            Description\n                                                        \n                                                    \n                                                    \n                                                            \n                                                              points\n                                                              \n                                                                      number\n                                                              \n                                                              \n                                                              \n                                                              \n                                                            \n                                                    \n                                                \n                                        \n                                        \n                                        \n                                        \n                                            Returns :     any\n            \n                                        \n                                            \n                                                \n                                            \n                                \n                            \n                        \n                    \n                    \n                        \n                            \n                                \n                                    \n                                    Public start\n                                \n                            \n                            \n                                \n                                        \n                                    start()\n                                \n                            \n            \n            \n                                    \n                                        \n                                            Defined in src/services/progress-bar.service.ts:26\n                                        \n                                    \n            \n                            \n                                \n            \n                                        \n                                            Returns :     void\n            \n                                        \n                                \n                            \n                        \n                    \n                    \n                        \n                            \n                                \n                                    \n                                    Public update\n                                \n                            \n                            \n                                \n                                        \n                                    update(points: number)\n                                \n                            \n            \n            \n                                    \n                                        \n                                            Defined in src/services/progress-bar.service.ts:17\n                                        \n                                    \n            \n                            \n                                \n            \n                                        \n                                                Parameters :\n                                                \n                                                    \n                                                        \n                                                            Name\n                                                            Type\n                                                            Optional\n                                                            Description\n                                                        \n                                                    \n                                                    \n                                                            \n                                                              points\n                                                              \n                                                                      number\n                                                              \n                                                              \n                                                              \n                                                              \n                                                            \n                                                    \n                                                \n                                        \n                                        \n                                        \n                                        \n                                            Returns :     void\n            \n                                        \n                                            \n                                                \n                                            \n                                \n                            \n                        \n                    \n            \n\n            \n                \n                    \n                        Properties\n                    \n                    \n                        \n                            \n                                \n                                    \n                                    Public isFull\n                                \n                            \n                            \n                                \n                                    isFull:     boolean\n            \n                                \n                            \n                                \n                                    \n                                        Type :     boolean\n            \n                                    \n                                \n                                    \n                                        \n                                            Defined in src/services/progress-bar.service.ts:6\n                                        \n                                    \n            \n            \n                        \n                    \n                    \n                        \n                            \n                                \n                                    \n                                    Public maxPoints\n                                \n                            \n                            \n                                \n                                    maxPoints:     number\n            \n                                \n                            \n                                \n                                    \n                                        Type :     number\n            \n                                    \n                                \n                                \n                                    \n                                        Default value : 0\n                                    \n                                \n                                    \n                                        \n                                            Defined in src/services/progress-bar.service.ts:5\n                                        \n                                    \n            \n            \n                        \n                    \n                    \n                        \n                            \n                                \n                                    \n                                    Private startFn\n                                \n                            \n                            \n                                \n                                    startFn:     Function\n            \n                                \n                            \n                                \n                                    \n                                        Type :     Function\n            \n                                    \n                                \n                                    \n                                        \n                                            Defined in src/services/progress-bar.service.ts:8\n                                        \n                                    \n            \n            \n                        \n                    \n                    \n                        \n                            \n                                \n                                    \n                                    Private updateFn\n                                \n                            \n                            \n                                \n                                    updateFn:     Function\n            \n                                \n                            \n                                \n                                    \n                                        Type :     Function\n            \n                                    \n                                \n                                    \n                                        \n                                            Defined in src/services/progress-bar.service.ts:7\n                                        \n                                    \n            \n            \n                        \n                    \n            \n\n    \n\n\n    \n        import { Injectable } from '@angular/core';\n\n@Injectable()\nexport class ProgressBarService {\n  public maxPoints: number = 0;\n  public isFull: boolean;\n  private updateFn: Function = () => { };\n  private startFn: Function = () => { };\n\n  constructor(maxPoints: number, updateFn?: Function, startFn?: Function) {\n    this.maxPoints = maxPoints || this.maxPoints;\n    this.updateFn = updateFn || this.updateFn;\n    this.startFn = startFn || this.startFn;\n    this.isFull = false;\n    return this;\n  }\n  public update(points: number) {\n    if (!this.isFull) {\n      this.updateFn();\n\n      if (this.maxPoints \n    \n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/Level.html":{"url":"interfaces/Level.html","title":"interface - Level","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  Level\n\n\n\n    \n        Info\n    \n\n\n    \n        Source\n    \n\n\n\n    \n        \n            File\n        \n        \n            src/interface/level.interface.ts\n        \n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        badge\n                                \n                                \n                                        icon\n                                \n                                \n                                        range\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        badge\n                                    \n                                \n                                \n                                    \n                                        badge:     string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string\n\n                                        \n                                    \n\n\n\n                                    \n                                        \n                                            Defined in src/interface/level.interface.ts:2\n                                        \n                                    \n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        icon\n                                    \n                                \n                                \n                                    \n                                        icon:     string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string\n\n                                        \n                                    \n\n\n\n                                    \n                                        \n                                            Defined in src/interface/level.interface.ts:3\n                                        \n                                    \n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        range\n                                    \n                                \n                                \n                                    \n                                        range:     literal type\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     literal type\n\n                                        \n                                    \n\n\n\n                                    \n                                        \n                                            Defined in src/interface/level.interface.ts:4\n                                        \n                                    \n\n                        \n                    \n            \n    \n\n\n    \n        export interface Level {\n  badge: string\n  icon?: string\n  range?: {\n    min: number\n    max: number\n  }\n}\n\n    \n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"coverage.html":{"url":"coverage.html","title":"coverage - coverage","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Documentation coverage\n\n\n\n\n\n    \n        \n            File\n            Type\n            Identifier\n            Statements\n        \n    \n    \n        \n            \n                src/interface/level.interface.ts\n            \n            \n                interface\n            \n            \n                Level\n            \n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                src/services/breakpoint.service.ts\n            \n            \n                injectable\n            \n            \n                BreakpointService\n            \n            \n                0 %\n                (0/5)\n            \n        \n        \n            \n                src/services/gamification.service.ts\n            \n            \n                injectable\n            \n            \n                GamificationService\n            \n            \n                0 %\n                (0/24)\n            \n        \n        \n            \n                src/services/mission.service.ts\n            \n            \n                injectable\n            \n            \n                MissionService\n            \n            \n                0 %\n                (0/7)\n            \n        \n        \n            \n                src/services/progress-bar.service.ts\n            \n            \n                injectable\n            \n            \n                ProgressBarService\n            \n            \n                0 %\n                (0/7)\n            \n        \n    \n\n\n\n\n\n    new Tablesort(document.getElementById('coverage-table'));\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"}}
}
